/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LinkDestination } from './LinkDestination';
import {
    LinkDestinationFromJSON,
    LinkDestinationFromJSONTyped,
    LinkDestinationToJSON,
    LinkDestinationToJSONTyped,
} from './LinkDestination';

/**
 * 
 * @export
 * @interface LinkBody
 */
export interface LinkBody {
    /**
     * 
     * @type {LinkDestination}
     * @memberof LinkBody
     */
    destinations?: LinkDestination;
    /**
     * 
     * @type {string}
     * @memberof LinkBody
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof LinkBody
     */
    group_guid?: string;
    /**
     * 
     * @type {string}
     * @memberof LinkBody
     */
    created_at?: string;
    /**
     * 
     * @type {string}
     * @memberof LinkBody
     */
    modified_at?: string;
    /**
     * 
     * @type {number}
     * @memberof LinkBody
     */
    version?: number;
    /**
     * 
     * @type {string}
     * @memberof LinkBody
     */
    title?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof LinkBody
     */
    tags?: Array<string>;
}

/**
 * Check if a given object implements the LinkBody interface.
 */
export function instanceOfLinkBody(value: object): value is LinkBody {
    return true;
}

export function LinkBodyFromJSON(json: any): LinkBody {
    return LinkBodyFromJSONTyped(json, false);
}

export function LinkBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkBody {
    if (json == null) {
        return json;
    }
    return {
        
        'destinations': json['destinations'] == null ? undefined : LinkDestinationFromJSON(json['destinations']),
        'id': json['id'] == null ? undefined : json['id'],
        'group_guid': json['group_guid'] == null ? undefined : json['group_guid'],
        'created_at': json['created_at'] == null ? undefined : json['created_at'],
        'modified_at': json['modified_at'] == null ? undefined : json['modified_at'],
        'version': json['version'] == null ? undefined : json['version'],
        'title': json['title'] == null ? undefined : json['title'],
        'tags': json['tags'] == null ? undefined : json['tags'],
    };
}

export function LinkBodyToJSON(json: any): LinkBody {
    return LinkBodyToJSONTyped(json, false);
}

export function LinkBodyToJSONTyped(value?: LinkBody | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'destinations': LinkDestinationToJSON(value['destinations']),
        'id': value['id'],
        'group_guid': value['group_guid'],
        'created_at': value['created_at'],
        'modified_at': value['modified_at'],
        'version': value['version'],
        'title': value['title'],
        'tags': value['tags'],
    };
}

