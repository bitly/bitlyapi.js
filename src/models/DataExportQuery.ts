/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MetricsColumn } from './MetricsColumn';
import {
    MetricsColumnFromJSON,
    MetricsColumnFromJSONTyped,
    MetricsColumnToJSON,
    MetricsColumnToJSONTyped,
} from './MetricsColumn';

/**
 * 
 * @export
 * @interface DataExportQuery
 */
export interface DataExportQuery {
    /**
     * 
     * @type {string}
     * @memberof DataExportQuery
     */
    report_type: DataExportQueryReportTypeEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof DataExportQuery
     */
    emails: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof DataExportQuery
     */
    created_before?: number;
    /**
     * 
     * @type {number}
     * @memberof DataExportQuery
     */
    created_after?: number;
    /**
     * 
     * @type {number}
     * @memberof DataExportQuery
     */
    modified_after?: number;
    /**
     * 
     * @type {string}
     * @memberof DataExportQuery
     */
    query?: string;
    /**
     * 
     * @type {string}
     * @memberof DataExportQuery
     */
    keyword?: string;
    /**
     * 
     * @type {string}
     * @memberof DataExportQuery
     */
    archived?: string;
    /**
     * 
     * @type {string}
     * @memberof DataExportQuery
     */
    link_deeplinks?: string;
    /**
     * 
     * @type {string}
     * @memberof DataExportQuery
     */
    custom_bitlink?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof DataExportQuery
     */
    creating_logins?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof DataExportQuery
     */
    is_customized?: string;
    /**
     * 
     * @type {string}
     * @memberof DataExportQuery
     */
    is_gs1?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof DataExportQuery
     */
    qrc_types?: Array<DataExportQueryQrcTypesEnum>;
    /**
     * 
     * @type {Array<string>}
     * @memberof DataExportQuery
     */
    tags?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof DataExportQuery
     */
    campaign_ids?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof DataExportQuery
     */
    unit?: string;
    /**
     * 
     * @type {number}
     * @memberof DataExportQuery
     */
    units?: number;
    /**
     * 
     * @type {number}
     * @memberof DataExportQuery
     */
    unit_reference?: number;
    /**
     * Includes the maximum available history for the user in the report. Default is false.
     * @type {boolean}
     * @memberof DataExportQuery
     */
    include_max_history?: boolean;
    /**
     * The minimum number of clicks a link must have in order to be included in the report during their max history. Default is 0 which means all links are included. For example, value of 100 means only links at least a 100 clicks during this time period (max history) will be included in the report.
     * @type {number}
     * @memberof DataExportQuery
     */
    max_history_minimum_count?: number;
    /**
     * Parameters for custom metrics column in the report. Each entry in the array will result in a new metrics column in the report.
     * @type {Array<MetricsColumn>}
     * @memberof DataExportQuery
     */
    metrics_columns?: Array<MetricsColumn>;
}

/**
* @export
* @enum {string}
*/
export enum DataExportQueryReportTypeEnum {
    links_metrics = 'links_metrics',
    gdpr_sar = 'gdpr_sar',
    qr_codes = 'qr_codes',
    org_users = 'org_users'
}
/**
* @export
* @enum {string}
*/
export enum DataExportQueryQrcTypesEnum {
    bitlink = 'bitlink',
    long_url = 'long_url'
}


/**
 * Check if a given object implements the DataExportQuery interface.
 */
export function instanceOfDataExportQuery(value: object): value is DataExportQuery {
    if (!('report_type' in value) || value['report_type'] === undefined) return false;
    if (!('emails' in value) || value['emails'] === undefined) return false;
    return true;
}

export function DataExportQueryFromJSON(json: any): DataExportQuery {
    return DataExportQueryFromJSONTyped(json, false);
}

export function DataExportQueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataExportQuery {
    if (json == null) {
        return json;
    }
    return {
        
        'report_type': json['report_type'],
        'emails': json['emails'],
        'created_before': json['created_before'] == null ? undefined : json['created_before'],
        'created_after': json['created_after'] == null ? undefined : json['created_after'],
        'modified_after': json['modified_after'] == null ? undefined : json['modified_after'],
        'query': json['query'] == null ? undefined : json['query'],
        'keyword': json['keyword'] == null ? undefined : json['keyword'],
        'archived': json['archived'] == null ? undefined : json['archived'],
        'link_deeplinks': json['link_deeplinks'] == null ? undefined : json['link_deeplinks'],
        'custom_bitlink': json['custom_bitlink'] == null ? undefined : json['custom_bitlink'],
        'creating_logins': json['creating_logins'] == null ? undefined : json['creating_logins'],
        'is_customized': json['is_customized'] == null ? undefined : json['is_customized'],
        'is_gs1': json['is_gs1'] == null ? undefined : json['is_gs1'],
        'qrc_types': json['qrc_types'] == null ? undefined : json['qrc_types'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'campaign_ids': json['campaign_ids'] == null ? undefined : json['campaign_ids'],
        'unit': json['unit'] == null ? undefined : json['unit'],
        'units': json['units'] == null ? undefined : json['units'],
        'unit_reference': json['unit_reference'] == null ? undefined : json['unit_reference'],
        'include_max_history': json['include_max_history'] == null ? undefined : json['include_max_history'],
        'max_history_minimum_count': json['max_history_minimum_count'] == null ? undefined : json['max_history_minimum_count'],
        'metrics_columns': json['metrics_columns'] == null ? undefined : ((json['metrics_columns'] as Array<any>).map(MetricsColumnFromJSON)),
    };
}

export function DataExportQueryToJSON(json: any): DataExportQuery {
    return DataExportQueryToJSONTyped(json, false);
}

export function DataExportQueryToJSONTyped(value?: DataExportQuery | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'report_type': value['report_type'],
        'emails': value['emails'],
        'created_before': value['created_before'],
        'created_after': value['created_after'],
        'modified_after': value['modified_after'],
        'query': value['query'],
        'keyword': value['keyword'],
        'archived': value['archived'],
        'link_deeplinks': value['link_deeplinks'],
        'custom_bitlink': value['custom_bitlink'],
        'creating_logins': value['creating_logins'],
        'is_customized': value['is_customized'],
        'is_gs1': value['is_gs1'],
        'qrc_types': value['qrc_types'],
        'tags': value['tags'],
        'campaign_ids': value['campaign_ids'],
        'unit': value['unit'],
        'units': value['units'],
        'unit_reference': value['unit_reference'],
        'include_max_history': value['include_max_history'],
        'max_history_minimum_count': value['max_history_minimum_count'],
        'metrics_columns': value['metrics_columns'] == null ? undefined : ((value['metrics_columns'] as Array<any>).map(MetricsColumnToJSON)),
    };
}

