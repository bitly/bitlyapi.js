/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { InputDomain } from './InputDomain';
import {
    InputDomainFromJSON,
    InputDomainFromJSONTyped,
    InputDomainToJSON,
    InputDomainToJSONTyped,
} from './InputDomain';
import type { BSDSearchResult } from './BSDSearchResult';
import {
    BSDSearchResultFromJSON,
    BSDSearchResultFromJSONTyped,
    BSDSearchResultToJSON,
    BSDSearchResultToJSONTyped,
} from './BSDSearchResult';

/**
 * 
 * @export
 * @interface BSDSearchResults
 */
export interface BSDSearchResults {
    /**
     * 
     * @type {Array<BSDSearchResult>}
     * @memberof BSDSearchResults
     */
    results?: Array<BSDSearchResult>;
    /**
     * 
     * @type {InputDomain}
     * @memberof BSDSearchResults
     */
    input_domain?: InputDomain;
}

/**
 * Check if a given object implements the BSDSearchResults interface.
 */
export function instanceOfBSDSearchResults(value: object): value is BSDSearchResults {
    return true;
}

export function BSDSearchResultsFromJSON(json: any): BSDSearchResults {
    return BSDSearchResultsFromJSONTyped(json, false);
}

export function BSDSearchResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BSDSearchResults {
    if (json == null) {
        return json;
    }
    return {
        
        'results': json['results'] == null ? undefined : ((json['results'] as Array<any>).map(BSDSearchResultFromJSON)),
        'input_domain': json['input_domain'] == null ? undefined : InputDomainFromJSON(json['input_domain']),
    };
}

export function BSDSearchResultsToJSON(json: any): BSDSearchResults {
    return BSDSearchResultsToJSONTyped(json, false);
}

export function BSDSearchResultsToJSONTyped(value?: BSDSearchResults | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'results': value['results'] == null ? undefined : ((value['results'] as Array<any>).map(BSDSearchResultToJSON)),
        'input_domain': InputDomainToJSON(value['input_domain']),
    };
}

