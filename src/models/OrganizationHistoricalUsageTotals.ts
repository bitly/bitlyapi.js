/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GroupHistoricalUsageTotals } from './GroupHistoricalUsageTotals';
import {
    GroupHistoricalUsageTotalsFromJSON,
    GroupHistoricalUsageTotalsFromJSONTyped,
    GroupHistoricalUsageTotalsToJSON,
    GroupHistoricalUsageTotalsToJSONTyped,
} from './GroupHistoricalUsageTotals';

/**
 * 
 * @export
 * @interface OrganizationHistoricalUsageTotals
 */
export interface OrganizationHistoricalUsageTotals {
    /**
     * the organization's guid
     * @type {string}
     * @memberof OrganizationHistoricalUsageTotals
     */
    org_guid: string;
    /**
     * Date ("2006-01-02") of the beginning of the usage totals
     * @type {string}
     * @memberof OrganizationHistoricalUsageTotals
     */
    start_date: string;
    /**
     * Date ("2006-01-02") of the end of the usage totals
     * @type {string}
     * @memberof OrganizationHistoricalUsageTotals
     */
    end_date: string;
    /**
     * an array of all of the organization's groups' historical feature usage totals
     * @type {Array<GroupHistoricalUsageTotals>}
     * @memberof OrganizationHistoricalUsageTotals
     */
    groups_historical_usage_totals: Array<GroupHistoricalUsageTotals>;
}

/**
 * Check if a given object implements the OrganizationHistoricalUsageTotals interface.
 */
export function instanceOfOrganizationHistoricalUsageTotals(value: object): value is OrganizationHistoricalUsageTotals {
    if (!('org_guid' in value) || value['org_guid'] === undefined) return false;
    if (!('start_date' in value) || value['start_date'] === undefined) return false;
    if (!('end_date' in value) || value['end_date'] === undefined) return false;
    if (!('groups_historical_usage_totals' in value) || value['groups_historical_usage_totals'] === undefined) return false;
    return true;
}

export function OrganizationHistoricalUsageTotalsFromJSON(json: any): OrganizationHistoricalUsageTotals {
    return OrganizationHistoricalUsageTotalsFromJSONTyped(json, false);
}

export function OrganizationHistoricalUsageTotalsFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationHistoricalUsageTotals {
    if (json == null) {
        return json;
    }
    return {
        
        'org_guid': json['org_guid'],
        'start_date': json['start_date'],
        'end_date': json['end_date'],
        'groups_historical_usage_totals': ((json['groups_historical_usage_totals'] as Array<any>).map(GroupHistoricalUsageTotalsFromJSON)),
    };
}

export function OrganizationHistoricalUsageTotalsToJSON(json: any): OrganizationHistoricalUsageTotals {
    return OrganizationHistoricalUsageTotalsToJSONTyped(json, false);
}

export function OrganizationHistoricalUsageTotalsToJSONTyped(value?: OrganizationHistoricalUsageTotals | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'org_guid': value['org_guid'],
        'start_date': value['start_date'],
        'end_date': value['end_date'],
        'groups_historical_usage_totals': ((value['groups_historical_usage_totals'] as Array<any>).map(GroupHistoricalUsageTotalsToJSON)),
    };
}

