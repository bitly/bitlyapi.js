/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PriceMap } from './PriceMap';
import {
    PriceMapFromJSON,
    PriceMapFromJSONTyped,
    PriceMapToJSON,
    PriceMapToJSONTyped,
} from './PriceMap';

/**
 * the add on settings associated with the tier
 * @export
 * @interface AddOnSetting
 */
export interface AddOnSetting {
    /**
     * 
     * @type {string}
     * @memberof AddOnSetting
     */
    feature_name?: string;
    /**
     * 
     * @type {number}
     * @memberof AddOnSetting
     */
    limit?: number;
    /**
     * 
     * @type {string}
     * @memberof AddOnSetting
     */
    product?: string;
    /**
     * 
     * @type {number}
     * @memberof AddOnSetting
     */
    incr?: number;
    /**
     * 
     * @type {number}
     * @memberof AddOnSetting
     */
    price?: number;
    /**
     * 
     * @type {PriceMap}
     * @memberof AddOnSetting
     */
    price_map?: PriceMap;
}

/**
 * Check if a given object implements the AddOnSetting interface.
 */
export function instanceOfAddOnSetting(value: object): value is AddOnSetting {
    return true;
}

export function AddOnSettingFromJSON(json: any): AddOnSetting {
    return AddOnSettingFromJSONTyped(json, false);
}

export function AddOnSettingFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddOnSetting {
    if (json == null) {
        return json;
    }
    return {
        
        'feature_name': json['feature_name'] == null ? undefined : json['feature_name'],
        'limit': json['limit'] == null ? undefined : json['limit'],
        'product': json['product'] == null ? undefined : json['product'],
        'incr': json['incr'] == null ? undefined : json['incr'],
        'price': json['price'] == null ? undefined : json['price'],
        'price_map': json['price_map'] == null ? undefined : PriceMapFromJSON(json['price_map']),
    };
}

export function AddOnSettingToJSON(json: any): AddOnSetting {
    return AddOnSettingToJSONTyped(json, false);
}

export function AddOnSettingToJSONTyped(value?: AddOnSetting | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'feature_name': value['feature_name'],
        'limit': value['limit'],
        'product': value['product'],
        'incr': value['incr'],
        'price': value['price'],
        'price_map': PriceMapToJSON(value['price_map']),
    };
}

