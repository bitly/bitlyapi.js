/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SiteButtonTypeEnum } from './SiteButtonTypeEnum';
import {
    SiteButtonTypeEnumFromJSON,
    SiteButtonTypeEnumFromJSONTyped,
    SiteButtonTypeEnumToJSON,
    SiteButtonTypeEnumToJSONTyped,
} from './SiteButtonTypeEnum';

/**
 * 
 * @export
 * @interface SiteClicks
 */
export interface SiteClicks {
    /**
     * 
     * @type {number}
     * @memberof SiteClicks
     */
    clicks?: number;
    /**
     * 
     * @type {string}
     * @memberof SiteClicks
     */
    title?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SiteClicks
     */
    is_active?: boolean;
    /**
     * 
     * @type {string}
     * @memberof SiteClicks
     */
    long_url?: string;
    /**
     * 
     * @type {SiteButtonTypeEnum}
     * @memberof SiteClicks
     */
    type?: SiteButtonTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof SiteClicks
     */
    bitlink_id?: string;
    /**
     * 
     * @type {string}
     * @memberof SiteClicks
     */
    domain?: string;
    /**
     * 
     * @type {string}
     * @memberof SiteClicks
     */
    keyword?: string;
}



/**
 * Check if a given object implements the SiteClicks interface.
 */
export function instanceOfSiteClicks(value: object): value is SiteClicks {
    return true;
}

export function SiteClicksFromJSON(json: any): SiteClicks {
    return SiteClicksFromJSONTyped(json, false);
}

export function SiteClicksFromJSONTyped(json: any, ignoreDiscriminator: boolean): SiteClicks {
    if (json == null) {
        return json;
    }
    return {
        
        'clicks': json['clicks'] == null ? undefined : json['clicks'],
        'title': json['title'] == null ? undefined : json['title'],
        'is_active': json['is_active'] == null ? undefined : json['is_active'],
        'long_url': json['long_url'] == null ? undefined : json['long_url'],
        'type': json['type'] == null ? undefined : SiteButtonTypeEnumFromJSON(json['type']),
        'bitlink_id': json['bitlink_id'] == null ? undefined : json['bitlink_id'],
        'domain': json['domain'] == null ? undefined : json['domain'],
        'keyword': json['keyword'] == null ? undefined : json['keyword'],
    };
}

export function SiteClicksToJSON(json: any): SiteClicks {
    return SiteClicksToJSONTyped(json, false);
}

export function SiteClicksToJSONTyped(value?: SiteClicks | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'clicks': value['clicks'],
        'title': value['title'],
        'is_active': value['is_active'],
        'long_url': value['long_url'],
        'type': SiteButtonTypeEnumToJSON(value['type']),
        'bitlink_id': value['bitlink_id'],
        'domain': value['domain'],
        'keyword': value['keyword'],
    };
}

