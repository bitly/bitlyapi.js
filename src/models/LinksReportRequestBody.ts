/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MetricsColumn } from './MetricsColumn';
import {
    MetricsColumnFromJSON,
    MetricsColumnFromJSONTyped,
    MetricsColumnToJSON,
    MetricsColumnToJSONTyped,
} from './MetricsColumn';
import type { TimePeriod } from './TimePeriod';
import {
    TimePeriodFromJSON,
    TimePeriodFromJSONTyped,
    TimePeriodToJSON,
    TimePeriodToJSONTyped,
} from './TimePeriod';

/**
 * 
 * @export
 * @interface LinksReportRequestBody
 */
export interface LinksReportRequestBody {
    /**
     * 
     * @type {boolean}
     * @memberof LinksReportRequestBody
     */
    include_max_history?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof LinksReportRequestBody
     */
    include_max_time_period?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof LinksReportRequestBody
     */
    bitlink_ids?: Array<string>;
    /**
     * 
     * @type {Array<TimePeriod>}
     * @memberof LinksReportRequestBody
     */
    time_periods?: Array<TimePeriod>;
    /**
     * 
     * @type {Array<MetricsColumn>}
     * @memberof LinksReportRequestBody
     */
    metrics_columns?: Array<MetricsColumn>;
}

/**
 * Check if a given object implements the LinksReportRequestBody interface.
 */
export function instanceOfLinksReportRequestBody(value: object): value is LinksReportRequestBody {
    return true;
}

export function LinksReportRequestBodyFromJSON(json: any): LinksReportRequestBody {
    return LinksReportRequestBodyFromJSONTyped(json, false);
}

export function LinksReportRequestBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinksReportRequestBody {
    if (json == null) {
        return json;
    }
    return {
        
        'include_max_history': json['include_max_history'] == null ? undefined : json['include_max_history'],
        'include_max_time_period': json['include_max_time_period'] == null ? undefined : json['include_max_time_period'],
        'bitlink_ids': json['bitlink_ids'] == null ? undefined : json['bitlink_ids'],
        'time_periods': json['time_periods'] == null ? undefined : ((json['time_periods'] as Array<any>).map(TimePeriodFromJSON)),
        'metrics_columns': json['metrics_columns'] == null ? undefined : ((json['metrics_columns'] as Array<any>).map(MetricsColumnFromJSON)),
    };
}

export function LinksReportRequestBodyToJSON(json: any): LinksReportRequestBody {
    return LinksReportRequestBodyToJSONTyped(json, false);
}

export function LinksReportRequestBodyToJSONTyped(value?: LinksReportRequestBody | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'include_max_history': value['include_max_history'],
        'include_max_time_period': value['include_max_time_period'],
        'bitlink_ids': value['bitlink_ids'],
        'time_periods': value['time_periods'] == null ? undefined : ((value['time_periods'] as Array<any>).map(TimePeriodToJSON)),
        'metrics_columns': value['metrics_columns'] == null ? undefined : ((value['metrics_columns'] as Array<any>).map(MetricsColumnToJSON)),
    };
}

