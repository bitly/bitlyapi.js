/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FacetCountItem } from './FacetCountItem';
import {
    FacetCountItemFromJSON,
    FacetCountItemFromJSONTyped,
    FacetCountItemToJSON,
    FacetCountItemToJSONTyped,
} from './FacetCountItem';

/**
 * 
 * @export
 * @interface FacetCountData
 */
export interface FacetCountData {
    /**
     * 
     * @type {number}
     * @memberof FacetCountData
     */
    ts?: number;
    /**
     * 
     * @type {number}
     * @memberof FacetCountData
     */
    total_count?: number;
    /**
     * 
     * @type {Array<FacetCountItem>}
     * @memberof FacetCountData
     */
    items?: Array<FacetCountItem>;
}

/**
 * Check if a given object implements the FacetCountData interface.
 */
export function instanceOfFacetCountData(value: object): value is FacetCountData {
    return true;
}

export function FacetCountDataFromJSON(json: any): FacetCountData {
    return FacetCountDataFromJSONTyped(json, false);
}

export function FacetCountDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): FacetCountData {
    if (json == null) {
        return json;
    }
    return {
        
        'ts': json['ts'] == null ? undefined : json['ts'],
        'total_count': json['total_count'] == null ? undefined : json['total_count'],
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(FacetCountItemFromJSON)),
    };
}

export function FacetCountDataToJSON(json: any): FacetCountData {
    return FacetCountDataToJSONTyped(json, false);
}

export function FacetCountDataToJSONTyped(value?: FacetCountData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ts': value['ts'],
        'total_count': value['total_count'],
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(FacetCountItemToJSON)),
    };
}

