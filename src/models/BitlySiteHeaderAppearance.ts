/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SiteStylePreference } from './SiteStylePreference';
import {
    SiteStylePreferenceFromJSON,
    SiteStylePreferenceFromJSONTyped,
    SiteStylePreferenceToJSON,
    SiteStylePreferenceToJSONTyped,
} from './SiteStylePreference';
import type { SiteTextBorderTypeEnum } from './SiteTextBorderTypeEnum';
import {
    SiteTextBorderTypeEnumFromJSON,
    SiteTextBorderTypeEnumFromJSONTyped,
    SiteTextBorderTypeEnumToJSON,
    SiteTextBorderTypeEnumToJSONTyped,
} from './SiteTextBorderTypeEnum';
import type { SiteTextWeightEnum } from './SiteTextWeightEnum';
import {
    SiteTextWeightEnumFromJSON,
    SiteTextWeightEnumFromJSONTyped,
    SiteTextWeightEnumToJSON,
    SiteTextWeightEnumToJSONTyped,
} from './SiteTextWeightEnum';
import type { SiteImageAlignment } from './SiteImageAlignment';
import {
    SiteImageAlignmentFromJSON,
    SiteImageAlignmentFromJSONTyped,
    SiteImageAlignmentToJSON,
    SiteImageAlignmentToJSONTyped,
} from './SiteImageAlignment';
import type { SiteTextSizeEnum } from './SiteTextSizeEnum';
import {
    SiteTextSizeEnumFromJSON,
    SiteTextSizeEnumFromJSONTyped,
    SiteTextSizeEnumToJSON,
    SiteTextSizeEnumToJSONTyped,
} from './SiteTextSizeEnum';
import type { SiteTextLocation } from './SiteTextLocation';
import {
    SiteTextLocationFromJSON,
    SiteTextLocationFromJSONTyped,
    SiteTextLocationToJSON,
    SiteTextLocationToJSONTyped,
} from './SiteTextLocation';
import type { SiteTextAlignmentEnum } from './SiteTextAlignmentEnum';
import {
    SiteTextAlignmentEnumFromJSON,
    SiteTextAlignmentEnumFromJSONTyped,
    SiteTextAlignmentEnumToJSON,
    SiteTextAlignmentEnumToJSONTyped,
} from './SiteTextAlignmentEnum';
import type { SiteProfileImageSize } from './SiteProfileImageSize';
import {
    SiteProfileImageSizeFromJSON,
    SiteProfileImageSizeFromJSONTyped,
    SiteProfileImageSizeToJSON,
    SiteProfileImageSizeToJSONTyped,
} from './SiteProfileImageSize';
import type { SiteProfileImageBorderSize } from './SiteProfileImageBorderSize';
import {
    SiteProfileImageBorderSizeFromJSON,
    SiteProfileImageBorderSizeFromJSONTyped,
    SiteProfileImageBorderSizeToJSON,
    SiteProfileImageBorderSizeToJSONTyped,
} from './SiteProfileImageBorderSize';
import type { SiteProfileImageShape } from './SiteProfileImageShape';
import {
    SiteProfileImageShapeFromJSON,
    SiteProfileImageShapeFromJSONTyped,
    SiteProfileImageShapeToJSON,
    SiteProfileImageShapeToJSONTyped,
} from './SiteProfileImageShape';
import type { SiteProfileImageType } from './SiteProfileImageType';
import {
    SiteProfileImageTypeFromJSON,
    SiteProfileImageTypeFromJSONTyped,
    SiteProfileImageTypeToJSON,
    SiteProfileImageTypeToJSONTyped,
} from './SiteProfileImageType';
import type { SiteBannerType } from './SiteBannerType';
import {
    SiteBannerTypeFromJSON,
    SiteBannerTypeFromJSONTyped,
    SiteBannerTypeToJSON,
    SiteBannerTypeToJSONTyped,
} from './SiteBannerType';
import type { SiteProfileImageLocation } from './SiteProfileImageLocation';
import {
    SiteProfileImageLocationFromJSON,
    SiteProfileImageLocationFromJSONTyped,
    SiteProfileImageLocationToJSON,
    SiteProfileImageLocationToJSONTyped,
} from './SiteProfileImageLocation';

/**
 * 
 * @export
 * @interface BitlySiteHeaderAppearance
 */
export interface BitlySiteHeaderAppearance {
    /**
     * 
     * @type {SiteBannerType}
     * @memberof BitlySiteHeaderAppearance
     */
    banner_type?: SiteBannerType;
    /**
     * 
     * @type {SiteProfileImageSize}
     * @memberof BitlySiteHeaderAppearance
     */
    profile_image_size?: SiteProfileImageSize;
    /**
     * 
     * @type {SiteProfileImageShape}
     * @memberof BitlySiteHeaderAppearance
     */
    profile_image_shape?: SiteProfileImageShape;
    /**
     * 
     * @type {SiteProfileImageBorderSize}
     * @memberof BitlySiteHeaderAppearance
     */
    profile_image_border_size?: SiteProfileImageBorderSize;
    /**
     * 
     * @type {SiteProfileImageType}
     * @memberof BitlySiteHeaderAppearance
     */
    profile_image_type?: SiteProfileImageType;
    /**
     * 
     * @type {SiteProfileImageLocation}
     * @memberof BitlySiteHeaderAppearance
     */
    profile_image_location?: SiteProfileImageLocation;
    /**
     * 
     * @type {boolean}
     * @memberof BitlySiteHeaderAppearance
     */
    profile_image_overflow?: boolean;
    /**
     * 
     * @type {SiteTextLocation}
     * @memberof BitlySiteHeaderAppearance
     */
    text_location?: SiteTextLocation;
    /**
     * 
     * @type {SiteTextSizeEnum}
     * @memberof BitlySiteHeaderAppearance
     */
    title_size?: SiteTextSizeEnum;
    /**
     * 
     * @type {SiteTextAlignmentEnum}
     * @memberof BitlySiteHeaderAppearance
     */
    title_alignment?: SiteTextAlignmentEnum;
    /**
     * 
     * @type {SiteTextWeightEnum}
     * @memberof BitlySiteHeaderAppearance
     */
    title_weight?: SiteTextWeightEnum;
    /**
     * 
     * @type {SiteTextBorderTypeEnum}
     * @memberof BitlySiteHeaderAppearance
     */
    title_border_type?: SiteTextBorderTypeEnum;
    /**
     * 
     * @type {SiteTextSizeEnum}
     * @memberof BitlySiteHeaderAppearance
     */
    description_size?: SiteTextSizeEnum;
    /**
     * 
     * @type {SiteTextAlignmentEnum}
     * @memberof BitlySiteHeaderAppearance
     */
    description_alignment?: SiteTextAlignmentEnum;
    /**
     * 
     * @type {SiteTextWeightEnum}
     * @memberof BitlySiteHeaderAppearance
     */
    description_weight?: SiteTextWeightEnum;
    /**
     * 
     * @type {SiteTextBorderTypeEnum}
     * @memberof BitlySiteHeaderAppearance
     */
    description_border_type?: SiteTextBorderTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof BitlySiteHeaderAppearance
     */
    header_background_color?: string;
    /**
     * 
     * @type {string}
     * @memberof BitlySiteHeaderAppearance
     */
    banner_image_url?: string;
    /**
     * 
     * @type {SiteStylePreference}
     * @memberof BitlySiteHeaderAppearance
     */
    header_style_preference?: SiteStylePreference;
    /**
     * 
     * @type {SiteImageAlignment}
     * @memberof BitlySiteHeaderAppearance
     */
    banner_image_alignment?: SiteImageAlignment;
}



/**
 * Check if a given object implements the BitlySiteHeaderAppearance interface.
 */
export function instanceOfBitlySiteHeaderAppearance(value: object): value is BitlySiteHeaderAppearance {
    return true;
}

export function BitlySiteHeaderAppearanceFromJSON(json: any): BitlySiteHeaderAppearance {
    return BitlySiteHeaderAppearanceFromJSONTyped(json, false);
}

export function BitlySiteHeaderAppearanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): BitlySiteHeaderAppearance {
    if (json == null) {
        return json;
    }
    return {
        
        'banner_type': json['banner_type'] == null ? undefined : SiteBannerTypeFromJSON(json['banner_type']),
        'profile_image_size': json['profile_image_size'] == null ? undefined : SiteProfileImageSizeFromJSON(json['profile_image_size']),
        'profile_image_shape': json['profile_image_shape'] == null ? undefined : SiteProfileImageShapeFromJSON(json['profile_image_shape']),
        'profile_image_border_size': json['profile_image_border_size'] == null ? undefined : SiteProfileImageBorderSizeFromJSON(json['profile_image_border_size']),
        'profile_image_type': json['profile_image_type'] == null ? undefined : SiteProfileImageTypeFromJSON(json['profile_image_type']),
        'profile_image_location': json['profile_image_location'] == null ? undefined : SiteProfileImageLocationFromJSON(json['profile_image_location']),
        'profile_image_overflow': json['profile_image_overflow'] == null ? undefined : json['profile_image_overflow'],
        'text_location': json['text_location'] == null ? undefined : SiteTextLocationFromJSON(json['text_location']),
        'title_size': json['title_size'] == null ? undefined : SiteTextSizeEnumFromJSON(json['title_size']),
        'title_alignment': json['title_alignment'] == null ? undefined : SiteTextAlignmentEnumFromJSON(json['title_alignment']),
        'title_weight': json['title_weight'] == null ? undefined : SiteTextWeightEnumFromJSON(json['title_weight']),
        'title_border_type': json['title_border_type'] == null ? undefined : SiteTextBorderTypeEnumFromJSON(json['title_border_type']),
        'description_size': json['description_size'] == null ? undefined : SiteTextSizeEnumFromJSON(json['description_size']),
        'description_alignment': json['description_alignment'] == null ? undefined : SiteTextAlignmentEnumFromJSON(json['description_alignment']),
        'description_weight': json['description_weight'] == null ? undefined : SiteTextWeightEnumFromJSON(json['description_weight']),
        'description_border_type': json['description_border_type'] == null ? undefined : SiteTextBorderTypeEnumFromJSON(json['description_border_type']),
        'header_background_color': json['header_background_color'] == null ? undefined : json['header_background_color'],
        'banner_image_url': json['banner_image_url'] == null ? undefined : json['banner_image_url'],
        'header_style_preference': json['header_style_preference'] == null ? undefined : SiteStylePreferenceFromJSON(json['header_style_preference']),
        'banner_image_alignment': json['banner_image_alignment'] == null ? undefined : SiteImageAlignmentFromJSON(json['banner_image_alignment']),
    };
}

export function BitlySiteHeaderAppearanceToJSON(json: any): BitlySiteHeaderAppearance {
    return BitlySiteHeaderAppearanceToJSONTyped(json, false);
}

export function BitlySiteHeaderAppearanceToJSONTyped(value?: BitlySiteHeaderAppearance | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'banner_type': SiteBannerTypeToJSON(value['banner_type']),
        'profile_image_size': SiteProfileImageSizeToJSON(value['profile_image_size']),
        'profile_image_shape': SiteProfileImageShapeToJSON(value['profile_image_shape']),
        'profile_image_border_size': SiteProfileImageBorderSizeToJSON(value['profile_image_border_size']),
        'profile_image_type': SiteProfileImageTypeToJSON(value['profile_image_type']),
        'profile_image_location': SiteProfileImageLocationToJSON(value['profile_image_location']),
        'profile_image_overflow': value['profile_image_overflow'],
        'text_location': SiteTextLocationToJSON(value['text_location']),
        'title_size': SiteTextSizeEnumToJSON(value['title_size']),
        'title_alignment': SiteTextAlignmentEnumToJSON(value['title_alignment']),
        'title_weight': SiteTextWeightEnumToJSON(value['title_weight']),
        'title_border_type': SiteTextBorderTypeEnumToJSON(value['title_border_type']),
        'description_size': SiteTextSizeEnumToJSON(value['description_size']),
        'description_alignment': SiteTextAlignmentEnumToJSON(value['description_alignment']),
        'description_weight': SiteTextWeightEnumToJSON(value['description_weight']),
        'description_border_type': SiteTextBorderTypeEnumToJSON(value['description_border_type']),
        'header_background_color': value['header_background_color'],
        'banner_image_url': value['banner_image_url'],
        'header_style_preference': SiteStylePreferenceToJSON(value['header_style_preference']),
        'banner_image_alignment': SiteImageAlignmentToJSON(value['banner_image_alignment']),
    };
}

