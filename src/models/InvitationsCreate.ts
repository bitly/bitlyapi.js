/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { InvitationGroup } from './InvitationGroup';
import {
    InvitationGroupFromJSON,
    InvitationGroupFromJSONTyped,
    InvitationGroupToJSON,
    InvitationGroupToJSONTyped,
} from './InvitationGroup';

/**
 * 
 * @export
 * @interface InvitationsCreate
 */
export interface InvitationsCreate {
    /**
     * 
     * @type {Array<string>}
     * @memberof InvitationsCreate
     */
    emails: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof InvitationsCreate
     */
    role_name: string;
    /**
     * 
     * @type {Array<InvitationGroup>}
     * @memberof InvitationsCreate
     */
    groups?: Array<InvitationGroup>;
    /**
     * 
     * @type {string}
     * @memberof InvitationsCreate
     */
    created?: string;
    /**
     * 
     * @type {string}
     * @memberof InvitationsCreate
     */
    source?: string;
}

/**
 * Check if a given object implements the InvitationsCreate interface.
 */
export function instanceOfInvitationsCreate(value: object): value is InvitationsCreate {
    if (!('emails' in value) || value['emails'] === undefined) return false;
    if (!('role_name' in value) || value['role_name'] === undefined) return false;
    return true;
}

export function InvitationsCreateFromJSON(json: any): InvitationsCreate {
    return InvitationsCreateFromJSONTyped(json, false);
}

export function InvitationsCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvitationsCreate {
    if (json == null) {
        return json;
    }
    return {
        
        'emails': json['emails'],
        'role_name': json['role_name'],
        'groups': json['groups'] == null ? undefined : ((json['groups'] as Array<any>).map(InvitationGroupFromJSON)),
        'created': json['created'] == null ? undefined : json['created'],
        'source': json['source'] == null ? undefined : json['source'],
    };
}

export function InvitationsCreateToJSON(json: any): InvitationsCreate {
    return InvitationsCreateToJSONTyped(json, false);
}

export function InvitationsCreateToJSONTyped(value?: InvitationsCreate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'emails': value['emails'],
        'role_name': value['role_name'],
        'groups': value['groups'] == null ? undefined : ((value['groups'] as Array<any>).map(InvitationGroupToJSON)),
        'created': value['created'],
        'source': value['source'],
    };
}

