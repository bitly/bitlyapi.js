/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ClicksByCitiesFacet } from './ClicksByCitiesFacet';
import {
    ClicksByCitiesFacetFromJSON,
    ClicksByCitiesFacetFromJSONTyped,
    ClicksByCitiesFacetToJSON,
    ClicksByCitiesFacetToJSONTyped,
} from './ClicksByCitiesFacet';

/**
 * 
 * @export
 * @interface AggregateClicksForBitlinksByCitiesFacet
 */
export interface AggregateClicksForBitlinksByCitiesFacet {
    /**
     * 
     * @type {string}
     * @memberof AggregateClicksForBitlinksByCitiesFacet
     */
    unit_reference?: string;
    /**
     * 
     * @type {string}
     * @memberof AggregateClicksForBitlinksByCitiesFacet
     */
    unit?: string;
    /**
     * 
     * @type {number}
     * @memberof AggregateClicksForBitlinksByCitiesFacet
     */
    units?: number;
    /**
     * 
     * @type {string}
     * @memberof AggregateClicksForBitlinksByCitiesFacet
     */
    info?: string;
    /**
     * 
     * @type {string}
     * @memberof AggregateClicksForBitlinksByCitiesFacet
     */
    facet?: string;
    /**
     * 
     * @type {Array<ClicksByCitiesFacet>}
     * @memberof AggregateClicksForBitlinksByCitiesFacet
     */
    totals_for_time_period?: Array<ClicksByCitiesFacet>;
}

/**
 * Check if a given object implements the AggregateClicksForBitlinksByCitiesFacet interface.
 */
export function instanceOfAggregateClicksForBitlinksByCitiesFacet(value: object): value is AggregateClicksForBitlinksByCitiesFacet {
    return true;
}

export function AggregateClicksForBitlinksByCitiesFacetFromJSON(json: any): AggregateClicksForBitlinksByCitiesFacet {
    return AggregateClicksForBitlinksByCitiesFacetFromJSONTyped(json, false);
}

export function AggregateClicksForBitlinksByCitiesFacetFromJSONTyped(json: any, ignoreDiscriminator: boolean): AggregateClicksForBitlinksByCitiesFacet {
    if (json == null) {
        return json;
    }
    return {
        
        'unit_reference': json['unit_reference'] == null ? undefined : json['unit_reference'],
        'unit': json['unit'] == null ? undefined : json['unit'],
        'units': json['units'] == null ? undefined : json['units'],
        'info': json['info'] == null ? undefined : json['info'],
        'facet': json['facet'] == null ? undefined : json['facet'],
        'totals_for_time_period': json['totals_for_time_period'] == null ? undefined : ((json['totals_for_time_period'] as Array<any>).map(ClicksByCitiesFacetFromJSON)),
    };
}

export function AggregateClicksForBitlinksByCitiesFacetToJSON(json: any): AggregateClicksForBitlinksByCitiesFacet {
    return AggregateClicksForBitlinksByCitiesFacetToJSONTyped(json, false);
}

export function AggregateClicksForBitlinksByCitiesFacetToJSONTyped(value?: AggregateClicksForBitlinksByCitiesFacet | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'unit_reference': value['unit_reference'],
        'unit': value['unit'],
        'units': value['units'],
        'info': value['info'],
        'facet': value['facet'],
        'totals_for_time_period': value['totals_for_time_period'] == null ? undefined : ((value['totals_for_time_period'] as Array<any>).map(ClicksByCitiesFacetToJSON)),
    };
}

