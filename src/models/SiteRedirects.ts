/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SiteRedirects
 */
export interface SiteRedirects {
    /**
     * 
     * @type {string}
     * @memberof SiteRedirects
     */
    redirect_guid?: string;
    /**
     * 
     * @type {string}
     * @memberof SiteRedirects
     */
    microsite_guid?: string;
    /**
     * 
     * @type {string}
     * @memberof SiteRedirects
     */
    uri?: string;
    /**
     * 
     * @type {string}
     * @memberof SiteRedirects
     */
    domain?: string;
    /**
     * 
     * @type {string}
     * @memberof SiteRedirects
     */
    keyword?: string;
    /**
     * 
     * @type {string}
     * @memberof SiteRedirects
     */
    redirect_uri?: string;
    /**
     * 
     * @type {string}
     * @memberof SiteRedirects
     */
    redirect_domain?: string;
    /**
     * 
     * @type {string}
     * @memberof SiteRedirects
     */
    redirect_keyword?: string;
    /**
     * 
     * @type {string}
     * @memberof SiteRedirects
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof SiteRedirects
     */
    created?: string;
    /**
     * 
     * @type {string}
     * @memberof SiteRedirects
     */
    modified?: string;
}

/**
 * Check if a given object implements the SiteRedirects interface.
 */
export function instanceOfSiteRedirects(value: object): value is SiteRedirects {
    return true;
}

export function SiteRedirectsFromJSON(json: any): SiteRedirects {
    return SiteRedirectsFromJSONTyped(json, false);
}

export function SiteRedirectsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SiteRedirects {
    if (json == null) {
        return json;
    }
    return {
        
        'redirect_guid': json['redirect_guid'] == null ? undefined : json['redirect_guid'],
        'microsite_guid': json['microsite_guid'] == null ? undefined : json['microsite_guid'],
        'uri': json['uri'] == null ? undefined : json['uri'],
        'domain': json['domain'] == null ? undefined : json['domain'],
        'keyword': json['keyword'] == null ? undefined : json['keyword'],
        'redirect_uri': json['redirect_uri'] == null ? undefined : json['redirect_uri'],
        'redirect_domain': json['redirect_domain'] == null ? undefined : json['redirect_domain'],
        'redirect_keyword': json['redirect_keyword'] == null ? undefined : json['redirect_keyword'],
        'status': json['status'] == null ? undefined : json['status'],
        'created': json['created'] == null ? undefined : json['created'],
        'modified': json['modified'] == null ? undefined : json['modified'],
    };
}

export function SiteRedirectsToJSON(json: any): SiteRedirects {
    return SiteRedirectsToJSONTyped(json, false);
}

export function SiteRedirectsToJSONTyped(value?: SiteRedirects | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'redirect_guid': value['redirect_guid'],
        'microsite_guid': value['microsite_guid'],
        'uri': value['uri'],
        'domain': value['domain'],
        'keyword': value['keyword'],
        'redirect_uri': value['redirect_uri'],
        'redirect_domain': value['redirect_domain'],
        'redirect_keyword': value['redirect_keyword'],
        'status': value['status'],
        'created': value['created'],
        'modified': value['modified'],
    };
}

