/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Text } from './Text';
import {
    TextFromJSON,
    TextFromJSONTyped,
    TextToJSON,
    TextToJSONTyped,
} from './Text';

/**
 * Contains the center, top, and bottom text to be used in the QR code
 * @export
 * @interface QRCodeText
 */
export interface QRCodeText {
    /**
     * 
     * @type {Text}
     * @memberof QRCodeText
     */
    center?: Text;
    /**
     * 
     * @type {Text}
     * @memberof QRCodeText
     */
    top?: Text;
    /**
     * 
     * @type {Text}
     * @memberof QRCodeText
     */
    bottom?: Text;
}

/**
 * Check if a given object implements the QRCodeText interface.
 */
export function instanceOfQRCodeText(value: object): value is QRCodeText {
    return true;
}

export function QRCodeTextFromJSON(json: any): QRCodeText {
    return QRCodeTextFromJSONTyped(json, false);
}

export function QRCodeTextFromJSONTyped(json: any, ignoreDiscriminator: boolean): QRCodeText {
    if (json == null) {
        return json;
    }
    return {
        
        'center': json['center'] == null ? undefined : json['center'],
        'top': json['top'] == null ? undefined : json['top'],
        'bottom': json['bottom'] == null ? undefined : json['bottom'],
    };
}

export function QRCodeTextToJSON(json: any): QRCodeText {
    return QRCodeTextToJSONTyped(json, false);
}

export function QRCodeTextToJSONTyped(value?: QRCodeText | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'center': value['center'],
        'top': value['top'],
        'bottom': value['bottom'],
    };
}

