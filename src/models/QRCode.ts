/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QRCodeCustomizations } from './QRCodeCustomizations';
import {
    QRCodeCustomizationsFromJSON,
    QRCodeCustomizationsFromJSONTyped,
    QRCodeCustomizationsToJSON,
    QRCodeCustomizationsToJSONTyped,
} from './QRCodeCustomizations';
import type { QRCodeSpecSettings } from './QRCodeSpecSettings';
import {
    QRCodeSpecSettingsFromJSON,
    QRCodeSpecSettingsFromJSONTyped,
    QRCodeSpecSettingsToJSON,
    QRCodeSpecSettingsToJSONTyped,
} from './QRCodeSpecSettings';
import type { QRCodeTypeEnum } from './QRCodeTypeEnum';
import {
    QRCodeTypeEnumFromJSON,
    QRCodeTypeEnumFromJSONTyped,
    QRCodeTypeEnumToJSON,
    QRCodeTypeEnumToJSONTyped,
} from './QRCodeTypeEnum';
import type { GS1Metadata } from './GS1Metadata';
import {
    GS1MetadataFromJSON,
    GS1MetadataFromJSONTyped,
    GS1MetadataToJSON,
    GS1MetadataToJSONTyped,
} from './GS1Metadata';
import type { QRCodeDynamic } from './QRCodeDynamic';
import {
    QRCodeDynamicFromJSON,
    QRCodeDynamicFromJSONTyped,
    QRCodeDynamicToJSON,
    QRCodeDynamicToJSONTyped,
} from './QRCodeDynamic';

/**
 * A full QR code with data and customization values
 * @export
 * @interface QRCode
 */
export interface QRCode {
    /**
     * The QR code's id, as a guid
     * @type {string}
     * @memberof QRCode
     */
    qrcode_id?: string;
    /**
     * 
     * @type {QRCodeCustomizations}
     * @memberof QRCode
     */
    render_customizations?: QRCodeCustomizations;
    /**
     * A boolean representing if any of the QR code's customization values have been changed from their default setting
     * @type {boolean}
     * @memberof QRCode
     */
    is_customized?: boolean;
    /**
     * The serialized string of the QR code's content
     * @type {string}
     * @memberof QRCode
     */
    serialized_content?: string;
    /**
     * 
     * @type {QRCodeTypeEnum}
     * @memberof QRCode
     */
    qr_code_type?: QRCodeTypeEnum;
    /**
     * ISO_TIMESTAMP
     * @type {string}
     * @memberof QRCode
     */
    created?: string;
    /**
     * ISO_TIMESTAMP
     * @type {string}
     * @memberof QRCode
     */
    modified?: string;
    /**
     * The unix epoch time when the QR code was created. This field will be deprecated soon. Use created instead.
     * @type {number}
     * @memberof QRCode
     */
    created_ts?: number;
    /**
     * The unix epoch time when the QR code was updated. Use modified instead of this field. Deprecation soon.
     * @type {number}
     * @memberof QRCode
     */
    modified_ts?: number;
    /**
     * The QR code's svg image data as a data uri
     * @type {string}
     * @memberof QRCode
     */
    svg?: string;
    /**
     * 
     * @type {QRCodeDynamic}
     * @memberof QRCode
     */
    dynamic_content?: QRCodeDynamic;
    /**
     * 
     * @type {QRCodeSpecSettings}
     * @memberof QRCode
     */
    spec_settings?: QRCodeSpecSettings;
    /**
     * 
     * @type {GS1Metadata}
     * @memberof QRCode
     */
    gs1?: GS1Metadata;
}



/**
 * Check if a given object implements the QRCode interface.
 */
export function instanceOfQRCode(value: object): value is QRCode {
    return true;
}

export function QRCodeFromJSON(json: any): QRCode {
    return QRCodeFromJSONTyped(json, false);
}

export function QRCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): QRCode {
    if (json == null) {
        return json;
    }
    return {
        
        'qrcode_id': json['qrcode_id'] == null ? undefined : json['qrcode_id'],
        'render_customizations': json['render_customizations'] == null ? undefined : QRCodeCustomizationsFromJSON(json['render_customizations']),
        'is_customized': json['is_customized'] == null ? undefined : json['is_customized'],
        'serialized_content': json['serialized_content'] == null ? undefined : json['serialized_content'],
        'qr_code_type': json['qr_code_type'] == null ? undefined : QRCodeTypeEnumFromJSON(json['qr_code_type']),
        'created': json['created'] == null ? undefined : json['created'],
        'modified': json['modified'] == null ? undefined : json['modified'],
        'created_ts': json['created_ts'] == null ? undefined : json['created_ts'],
        'modified_ts': json['modified_ts'] == null ? undefined : json['modified_ts'],
        'svg': json['svg'] == null ? undefined : json['svg'],
        'dynamic_content': json['dynamic_content'] == null ? undefined : QRCodeDynamicFromJSON(json['dynamic_content']),
        'spec_settings': json['spec_settings'] == null ? undefined : QRCodeSpecSettingsFromJSON(json['spec_settings']),
        'gs1': json['gs1'] == null ? undefined : GS1MetadataFromJSON(json['gs1']),
    };
}

export function QRCodeToJSON(json: any): QRCode {
    return QRCodeToJSONTyped(json, false);
}

export function QRCodeToJSONTyped(value?: QRCode | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'qrcode_id': value['qrcode_id'],
        'render_customizations': QRCodeCustomizationsToJSON(value['render_customizations']),
        'is_customized': value['is_customized'],
        'serialized_content': value['serialized_content'],
        'qr_code_type': QRCodeTypeEnumToJSON(value['qr_code_type']),
        'created': value['created'],
        'modified': value['modified'],
        'created_ts': value['created_ts'],
        'modified_ts': value['modified_ts'],
        'svg': value['svg'],
        'dynamic_content': QRCodeDynamicToJSON(value['dynamic_content']),
        'spec_settings': QRCodeSpecSettingsToJSON(value['spec_settings']),
        'gs1': GS1MetadataToJSON(value['gs1']),
    };
}

