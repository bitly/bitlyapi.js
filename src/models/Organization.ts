/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Organization
 */
export interface Organization {
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof Organization
     */
    references?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof Organization
     */
    is_active: boolean;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    guid: string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    tier: string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    tier_family: string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    tier_display_name: string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    role: string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    created: string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    modified: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Organization
     */
    bsds: Array<string>;
}

/**
 * Check if a given object implements the Organization interface.
 */
export function instanceOfOrganization(value: object): value is Organization {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('is_active' in value) || value['is_active'] === undefined) return false;
    if (!('guid' in value) || value['guid'] === undefined) return false;
    if (!('tier' in value) || value['tier'] === undefined) return false;
    if (!('tier_family' in value) || value['tier_family'] === undefined) return false;
    if (!('tier_display_name' in value) || value['tier_display_name'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('modified' in value) || value['modified'] === undefined) return false;
    if (!('bsds' in value) || value['bsds'] === undefined) return false;
    return true;
}

export function OrganizationFromJSON(json: any): Organization {
    return OrganizationFromJSONTyped(json, false);
}

export function OrganizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Organization {
    if (json == null) {
        return json;
    }
    return {
        
        'references': json['references'] == null ? undefined : json['references'],
        'name': json['name'],
        'is_active': json['is_active'],
        'guid': json['guid'],
        'tier': json['tier'],
        'tier_family': json['tier_family'],
        'tier_display_name': json['tier_display_name'],
        'role': json['role'],
        'created': json['created'],
        'modified': json['modified'],
        'bsds': json['bsds'],
    };
}

export function OrganizationToJSON(json: any): Organization {
    return OrganizationToJSONTyped(json, false);
}

export function OrganizationToJSONTyped(value?: Organization | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'references': value['references'],
        'name': value['name'],
        'is_active': value['is_active'],
        'guid': value['guid'],
        'tier': value['tier'],
        'tier_family': value['tier_family'],
        'tier_display_name': value['tier_display_name'],
        'role': value['role'],
        'created': value['created'],
        'modified': value['modified'],
        'bsds': value['bsds'],
    };
}

