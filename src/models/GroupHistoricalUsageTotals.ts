/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HistoricalUsageTotal } from './HistoricalUsageTotal';
import {
    HistoricalUsageTotalFromJSON,
    HistoricalUsageTotalFromJSONTyped,
    HistoricalUsageTotalToJSON,
    HistoricalUsageTotalToJSONTyped,
} from './HistoricalUsageTotal';

/**
 * 
 * @export
 * @interface GroupHistoricalUsageTotals
 */
export interface GroupHistoricalUsageTotals {
    /**
     * the group's guid
     * @type {string}
     * @memberof GroupHistoricalUsageTotals
     */
    group_guid?: string;
    /**
     * 
     * @type {Array<HistoricalUsageTotal>}
     * @memberof GroupHistoricalUsageTotals
     */
    historical_usage_totals?: Array<HistoricalUsageTotal>;
}

/**
 * Check if a given object implements the GroupHistoricalUsageTotals interface.
 */
export function instanceOfGroupHistoricalUsageTotals(value: object): value is GroupHistoricalUsageTotals {
    return true;
}

export function GroupHistoricalUsageTotalsFromJSON(json: any): GroupHistoricalUsageTotals {
    return GroupHistoricalUsageTotalsFromJSONTyped(json, false);
}

export function GroupHistoricalUsageTotalsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupHistoricalUsageTotals {
    if (json == null) {
        return json;
    }
    return {
        
        'group_guid': json['group_guid'] == null ? undefined : json['group_guid'],
        'historical_usage_totals': json['historical_usage_totals'] == null ? undefined : ((json['historical_usage_totals'] as Array<any>).map(HistoricalUsageTotalFromJSON)),
    };
}

export function GroupHistoricalUsageTotalsToJSON(json: any): GroupHistoricalUsageTotals {
    return GroupHistoricalUsageTotalsToJSONTyped(json, false);
}

export function GroupHistoricalUsageTotalsToJSONTyped(value?: GroupHistoricalUsageTotals | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'group_guid': value['group_guid'],
        'historical_usage_totals': value['historical_usage_totals'] == null ? undefined : ((value['historical_usage_totals'] as Array<any>).map(HistoricalUsageTotalToJSON)),
    };
}

