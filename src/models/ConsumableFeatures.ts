/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ConsumableFeature } from './ConsumableFeature';
import {
    ConsumableFeatureFromJSON,
    ConsumableFeatureFromJSONTyped,
    ConsumableFeatureToJSON,
    ConsumableFeatureToJSONTyped,
} from './ConsumableFeature';

/**
 * 
 * @export
 * @interface ConsumableFeatures
 */
export interface ConsumableFeatures {
    /**
     * 
     * @type {Array<ConsumableFeature>}
     * @memberof ConsumableFeatures
     */
    consumable_features?: Array<ConsumableFeature>;
}

/**
 * Check if a given object implements the ConsumableFeatures interface.
 */
export function instanceOfConsumableFeatures(value: object): value is ConsumableFeatures {
    return true;
}

export function ConsumableFeaturesFromJSON(json: any): ConsumableFeatures {
    return ConsumableFeaturesFromJSONTyped(json, false);
}

export function ConsumableFeaturesFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConsumableFeatures {
    if (json == null) {
        return json;
    }
    return {
        
        'consumable_features': json['consumable_features'] == null ? undefined : ((json['consumable_features'] as Array<any>).map(ConsumableFeatureFromJSON)),
    };
}

export function ConsumableFeaturesToJSON(json: any): ConsumableFeatures {
    return ConsumableFeaturesToJSONTyped(json, false);
}

export function ConsumableFeaturesToJSONTyped(value?: ConsumableFeatures | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'consumable_features': value['consumable_features'] == null ? undefined : ((value['consumable_features'] as Array<any>).map(ConsumableFeatureToJSON)),
    };
}

