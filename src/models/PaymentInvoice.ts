/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Charge } from './Charge';
import {
    ChargeFromJSON,
    ChargeFromJSONTyped,
    ChargeToJSON,
    ChargeToJSONTyped,
} from './Charge';
import type { Payments } from './Payments';
import {
    PaymentsFromJSON,
    PaymentsFromJSONTyped,
    PaymentsToJSON,
    PaymentsToJSONTyped,
} from './Payments';

/**
 * 
 * @export
 * @interface PaymentInvoice
 */
export interface PaymentInvoice {
    /**
     * 
     * @type {string}
     * @memberof PaymentInvoice
     */
    invoice_date?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentInvoice
     */
    invoice_due_date?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentInvoice
     */
    invoice_number?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentInvoice
     */
    invoice_id?: string;
    /**
     * 
     * @type {Array<Charge>}
     * @memberof PaymentInvoice
     */
    charges?: Array<Charge>;
    /**
     * 
     * @type {number}
     * @memberof PaymentInvoice
     */
    subtotal?: number;
    /**
     * 
     * @type {number}
     * @memberof PaymentInvoice
     */
    total_tax?: number;
    /**
     * 
     * @type {number}
     * @memberof PaymentInvoice
     */
    total?: number;
    /**
     * 
     * @type {Array<Payments>}
     * @memberof PaymentInvoice
     */
    payments?: Array<Payments>;
    /**
     * 
     * @type {string}
     * @memberof PaymentInvoice
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentInvoice
     */
    invoice_provider?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentInvoice
     */
    invoice_url?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentInvoice
     */
    status?: string;
}

/**
 * Check if a given object implements the PaymentInvoice interface.
 */
export function instanceOfPaymentInvoice(value: object): value is PaymentInvoice {
    return true;
}

export function PaymentInvoiceFromJSON(json: any): PaymentInvoice {
    return PaymentInvoiceFromJSONTyped(json, false);
}

export function PaymentInvoiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentInvoice {
    if (json == null) {
        return json;
    }
    return {
        
        'invoice_date': json['invoice_date'] == null ? undefined : json['invoice_date'],
        'invoice_due_date': json['invoice_due_date'] == null ? undefined : json['invoice_due_date'],
        'invoice_number': json['invoice_number'] == null ? undefined : json['invoice_number'],
        'invoice_id': json['invoice_id'] == null ? undefined : json['invoice_id'],
        'charges': json['charges'] == null ? undefined : ((json['charges'] as Array<any>).map(ChargeFromJSON)),
        'subtotal': json['subtotal'] == null ? undefined : json['subtotal'],
        'total_tax': json['total_tax'] == null ? undefined : json['total_tax'],
        'total': json['total'] == null ? undefined : json['total'],
        'payments': json['payments'] == null ? undefined : ((json['payments'] as Array<any>).map(PaymentsFromJSON)),
        'description': json['description'] == null ? undefined : json['description'],
        'invoice_provider': json['invoice_provider'] == null ? undefined : json['invoice_provider'],
        'invoice_url': json['invoice_url'] == null ? undefined : json['invoice_url'],
        'status': json['status'] == null ? undefined : json['status'],
    };
}

export function PaymentInvoiceToJSON(json: any): PaymentInvoice {
    return PaymentInvoiceToJSONTyped(json, false);
}

export function PaymentInvoiceToJSONTyped(value?: PaymentInvoice | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'invoice_date': value['invoice_date'],
        'invoice_due_date': value['invoice_due_date'],
        'invoice_number': value['invoice_number'],
        'invoice_id': value['invoice_id'],
        'charges': value['charges'] == null ? undefined : ((value['charges'] as Array<any>).map(ChargeToJSON)),
        'subtotal': value['subtotal'],
        'total_tax': value['total_tax'],
        'total': value['total'],
        'payments': value['payments'] == null ? undefined : ((value['payments'] as Array<any>).map(PaymentsToJSON)),
        'description': value['description'],
        'invoice_provider': value['invoice_provider'],
        'invoice_url': value['invoice_url'],
        'status': value['status'],
    };
}

