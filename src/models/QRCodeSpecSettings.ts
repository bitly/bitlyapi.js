/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The QR code's version, error correction, and mask values
 * @export
 * @interface QRCodeSpecSettings
 */
export interface QRCodeSpecSettings {
    /**
     * The QR code's selected version, determined automatically when the QR code is generated
     * @type {number}
     * @memberof QRCodeSpecSettings
     */
    version?: number;
    /**
     * The amount of error correction that the QR code was generated with
     * @type {number}
     * @memberof QRCodeSpecSettings
     */
    error_correction?: number;
    /**
     * The mask value, which changes the QR codes dot arrangement without changing the underlying data
     * @type {number}
     * @memberof QRCodeSpecSettings
     */
    mask?: number;
}

/**
 * Check if a given object implements the QRCodeSpecSettings interface.
 */
export function instanceOfQRCodeSpecSettings(value: object): value is QRCodeSpecSettings {
    return true;
}

export function QRCodeSpecSettingsFromJSON(json: any): QRCodeSpecSettings {
    return QRCodeSpecSettingsFromJSONTyped(json, false);
}

export function QRCodeSpecSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): QRCodeSpecSettings {
    if (json == null) {
        return json;
    }
    return {
        
        'version': json['version'] == null ? undefined : json['version'],
        'error_correction': json['error_correction'] == null ? undefined : json['error_correction'],
        'mask': json['mask'] == null ? undefined : json['mask'],
    };
}

export function QRCodeSpecSettingsToJSON(json: any): QRCodeSpecSettings {
    return QRCodeSpecSettingsToJSONTyped(json, false);
}

export function QRCodeSpecSettingsToJSONTyped(value?: QRCodeSpecSettings | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'version': value['version'],
        'error_correction': value['error_correction'],
        'mask': value['mask'],
    };
}

