/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Event
 */
export interface Event {
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    login: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    org_guid: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    group_guid?: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    ui_action: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    ui_action_date: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    initiated_by: EventInitiatedByEnum;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    referrer: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    action: string;
}

/**
* @export
* @enum {string}
*/
export enum EventInitiatedByEnum {
    app = 'app',
    user = 'user'
}


/**
 * Check if a given object implements the Event interface.
 */
export function instanceOfEvent(value: object): value is Event {
    if (!('login' in value) || value['login'] === undefined) return false;
    if (!('org_guid' in value) || value['org_guid'] === undefined) return false;
    if (!('ui_action' in value) || value['ui_action'] === undefined) return false;
    if (!('ui_action_date' in value) || value['ui_action_date'] === undefined) return false;
    if (!('initiated_by' in value) || value['initiated_by'] === undefined) return false;
    if (!('referrer' in value) || value['referrer'] === undefined) return false;
    if (!('action' in value) || value['action'] === undefined) return false;
    return true;
}

export function EventFromJSON(json: any): Event {
    return EventFromJSONTyped(json, false);
}

export function EventFromJSONTyped(json: any, ignoreDiscriminator: boolean): Event {
    if (json == null) {
        return json;
    }
    return {
        
        'login': json['login'],
        'org_guid': json['org_guid'],
        'group_guid': json['group_guid'] == null ? undefined : json['group_guid'],
        'ui_action': json['ui_action'],
        'ui_action_date': json['ui_action_date'],
        'initiated_by': json['initiated_by'],
        'referrer': json['referrer'],
        'action': json['action'],
    };
}

export function EventToJSON(json: any): Event {
    return EventToJSONTyped(json, false);
}

export function EventToJSONTyped(value?: Event | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'login': value['login'],
        'org_guid': value['org_guid'],
        'group_guid': value['group_guid'],
        'ui_action': value['ui_action'],
        'ui_action_date': value['ui_action_date'],
        'initiated_by': value['initiated_by'],
        'referrer': value['referrer'],
        'action': value['action'],
    };
}

