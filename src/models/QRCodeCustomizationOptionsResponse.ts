/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QRCodeFrameResponseItem } from './QRCodeFrameResponseItem';
import {
    QRCodeFrameResponseItemFromJSON,
    QRCodeFrameResponseItemFromJSONTyped,
    QRCodeFrameResponseItemToJSON,
    QRCodeFrameResponseItemToJSONTyped,
} from './QRCodeFrameResponseItem';
import type { QRCodeDotPattern } from './QRCodeDotPattern';
import {
    QRCodeDotPatternFromJSON,
    QRCodeDotPatternFromJSONTyped,
    QRCodeDotPatternToJSON,
    QRCodeDotPatternToJSONTyped,
} from './QRCodeDotPattern';
import type { QRCodeCornerResponseItem } from './QRCodeCornerResponseItem';
import {
    QRCodeCornerResponseItemFromJSON,
    QRCodeCornerResponseItemFromJSONTyped,
    QRCodeCornerResponseItemToJSON,
    QRCodeCornerResponseItemToJSONTyped,
} from './QRCodeCornerResponseItem';
import type { QRCodeTypeItem } from './QRCodeTypeItem';
import {
    QRCodeTypeItemFromJSON,
    QRCodeTypeItemFromJSONTyped,
    QRCodeTypeItemToJSON,
    QRCodeTypeItemToJSONTyped,
} from './QRCodeTypeItem';
import type { QRCodeLogoImage } from './QRCodeLogoImage';
import {
    QRCodeLogoImageFromJSON,
    QRCodeLogoImageFromJSONTyped,
    QRCodeLogoImageToJSON,
    QRCodeLogoImageToJSONTyped,
} from './QRCodeLogoImage';

/**
 * QR Code customization options response
 * @export
 * @interface QRCodeCustomizationOptionsResponse
 */
export interface QRCodeCustomizationOptionsResponse {
    /**
     * list of frame options
     * @type {Array<QRCodeFrameResponseItem>}
     * @memberof QRCodeCustomizationOptionsResponse
     */
    frames?: Array<QRCodeFrameResponseItem>;
    /**
     * list of dot pattern options
     * @type {Array<QRCodeDotPattern>}
     * @memberof QRCodeCustomizationOptionsResponse
     */
    dot_patterns?: Array<QRCodeDotPattern>;
    /**
     * list of corner options
     * @type {Array<QRCodeCornerResponseItem>}
     * @memberof QRCodeCustomizationOptionsResponse
     */
    corners?: Array<QRCodeCornerResponseItem>;
    /**
     * list of image format options
     * @type {Array<string>}
     * @memberof QRCodeCustomizationOptionsResponse
     */
    formats?: Array<string>;
    /**
     * list of dynamic type options
     * @type {Array<QRCodeTypeItem>}
     * @memberof QRCodeCustomizationOptionsResponse
     */
    dynamic_types?: Array<QRCodeTypeItem>;
    /**
     * list of static type options
     * @type {Array<QRCodeTypeItem>}
     * @memberof QRCodeCustomizationOptionsResponse
     */
    static_types?: Array<QRCodeTypeItem>;
    /**
     * list of logo options
     * @type {Array<QRCodeLogoImage>}
     * @memberof QRCodeCustomizationOptionsResponse
     */
    logos?: Array<QRCodeLogoImage>;
}

/**
 * Check if a given object implements the QRCodeCustomizationOptionsResponse interface.
 */
export function instanceOfQRCodeCustomizationOptionsResponse(value: object): value is QRCodeCustomizationOptionsResponse {
    return true;
}

export function QRCodeCustomizationOptionsResponseFromJSON(json: any): QRCodeCustomizationOptionsResponse {
    return QRCodeCustomizationOptionsResponseFromJSONTyped(json, false);
}

export function QRCodeCustomizationOptionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): QRCodeCustomizationOptionsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'frames': json['frames'] == null ? undefined : ((json['frames'] as Array<any>).map(QRCodeFrameResponseItemFromJSON)),
        'dot_patterns': json['dot_patterns'] == null ? undefined : ((json['dot_patterns'] as Array<any>).map(QRCodeDotPatternFromJSON)),
        'corners': json['corners'] == null ? undefined : ((json['corners'] as Array<any>).map(QRCodeCornerResponseItemFromJSON)),
        'formats': json['formats'] == null ? undefined : json['formats'],
        'dynamic_types': json['dynamic_types'] == null ? undefined : ((json['dynamic_types'] as Array<any>).map(QRCodeTypeItemFromJSON)),
        'static_types': json['static_types'] == null ? undefined : ((json['static_types'] as Array<any>).map(QRCodeTypeItemFromJSON)),
        'logos': json['logos'] == null ? undefined : ((json['logos'] as Array<any>).map(QRCodeLogoImageFromJSON)),
    };
}

export function QRCodeCustomizationOptionsResponseToJSON(json: any): QRCodeCustomizationOptionsResponse {
    return QRCodeCustomizationOptionsResponseToJSONTyped(json, false);
}

export function QRCodeCustomizationOptionsResponseToJSONTyped(value?: QRCodeCustomizationOptionsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'frames': value['frames'] == null ? undefined : ((value['frames'] as Array<any>).map(QRCodeFrameResponseItemToJSON)),
        'dot_patterns': value['dot_patterns'] == null ? undefined : ((value['dot_patterns'] as Array<any>).map(QRCodeDotPatternToJSON)),
        'corners': value['corners'] == null ? undefined : ((value['corners'] as Array<any>).map(QRCodeCornerResponseItemToJSON)),
        'formats': value['formats'],
        'dynamic_types': value['dynamic_types'] == null ? undefined : ((value['dynamic_types'] as Array<any>).map(QRCodeTypeItemToJSON)),
        'static_types': value['static_types'] == null ? undefined : ((value['static_types'] as Array<any>).map(QRCodeTypeItemToJSON)),
        'logos': value['logos'] == null ? undefined : ((value['logos'] as Array<any>).map(QRCodeLogoImageToJSON)),
    };
}

