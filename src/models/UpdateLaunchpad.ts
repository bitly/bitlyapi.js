/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LaunchpadAppearance } from './LaunchpadAppearance';
import {
    LaunchpadAppearanceFromJSON,
    LaunchpadAppearanceFromJSONTyped,
    LaunchpadAppearanceToJSON,
    LaunchpadAppearanceToJSONTyped,
} from './LaunchpadAppearance';

/**
 * @deprecated LL-2507
 * @export
 * @interface UpdateLaunchpad
 */
export interface UpdateLaunchpad {
    /**
     * 
     * @type {string}
     * @memberof UpdateLaunchpad
     */
    launchpad_id?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateLaunchpad
     */
    domain?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateLaunchpad
     */
    keyword?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateLaunchpad
     */
    uri?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateLaunchpad
     */
    is_active: boolean;
    /**
     * 
     * @type {LaunchpadAppearance}
     * @memberof UpdateLaunchpad
     */
    launchpad_appearance?: LaunchpadAppearance;
    /**
     * 
     * @type {string}
     * @memberof UpdateLaunchpad
     */
    qr_code_id?: string;
}

/**
 * Check if a given object implements the UpdateLaunchpad interface.
 */
export function instanceOfUpdateLaunchpad(value: object): value is UpdateLaunchpad {
    if (!('is_active' in value) || value['is_active'] === undefined) return false;
    return true;
}

export function UpdateLaunchpadFromJSON(json: any): UpdateLaunchpad {
    return UpdateLaunchpadFromJSONTyped(json, false);
}

export function UpdateLaunchpadFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateLaunchpad {
    if (json == null) {
        return json;
    }
    return {
        
        'launchpad_id': json['launchpad_id'] == null ? undefined : json['launchpad_id'],
        'domain': json['domain'] == null ? undefined : json['domain'],
        'keyword': json['keyword'] == null ? undefined : json['keyword'],
        'uri': json['uri'] == null ? undefined : json['uri'],
        'is_active': json['is_active'],
        'launchpad_appearance': json['launchpad_appearance'] == null ? undefined : LaunchpadAppearanceFromJSON(json['launchpad_appearance']),
        'qr_code_id': json['qr_code_id'] == null ? undefined : json['qr_code_id'],
    };
}

export function UpdateLaunchpadToJSON(json: any): UpdateLaunchpad {
    return UpdateLaunchpadToJSONTyped(json, false);
}

export function UpdateLaunchpadToJSONTyped(value?: UpdateLaunchpad | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'launchpad_id': value['launchpad_id'],
        'domain': value['domain'],
        'keyword': value['keyword'],
        'uri': value['uri'],
        'is_active': value['is_active'],
        'launchpad_appearance': LaunchpadAppearanceToJSON(value['launchpad_appearance']),
        'qr_code_id': value['qr_code_id'],
    };
}

