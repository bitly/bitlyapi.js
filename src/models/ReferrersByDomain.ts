/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Metric } from './Metric';
import {
    MetricFromJSON,
    MetricFromJSONTyped,
    MetricToJSON,
    MetricToJSONTyped,
} from './Metric';

/**
 * 
 * @export
 * @interface ReferrersByDomain
 */
export interface ReferrersByDomain {
    /**
     * 
     * @type {string}
     * @memberof ReferrersByDomain
     */
    network?: string;
    /**
     * 
     * @type {Array<Metric>}
     * @memberof ReferrersByDomain
     */
    referrers?: Array<Metric>;
}

/**
 * Check if a given object implements the ReferrersByDomain interface.
 */
export function instanceOfReferrersByDomain(value: object): value is ReferrersByDomain {
    return true;
}

export function ReferrersByDomainFromJSON(json: any): ReferrersByDomain {
    return ReferrersByDomainFromJSONTyped(json, false);
}

export function ReferrersByDomainFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReferrersByDomain {
    if (json == null) {
        return json;
    }
    return {
        
        'network': json['network'] == null ? undefined : json['network'],
        'referrers': json['referrers'] == null ? undefined : ((json['referrers'] as Array<any>).map(MetricFromJSON)),
    };
}

export function ReferrersByDomainToJSON(json: any): ReferrersByDomain {
    return ReferrersByDomainToJSONTyped(json, false);
}

export function ReferrersByDomainToJSONTyped(value?: ReferrersByDomain | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'network': value['network'],
        'referrers': value['referrers'] == null ? undefined : ((value['referrers'] as Array<any>).map(MetricToJSON)),
    };
}

