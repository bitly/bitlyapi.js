/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TimeComparisonDetails } from './TimeComparisonDetails';
import {
    TimeComparisonDetailsFromJSON,
    TimeComparisonDetailsFromJSONTyped,
    TimeComparisonDetailsToJSON,
    TimeComparisonDetailsToJSONTyped,
} from './TimeComparisonDetails';

/**
 * 
 * @export
 * @interface ChartVisualization
 */
export interface ChartVisualization {
    /**
     * 
     * @type {string}
     * @memberof ChartVisualization
     */
    type?: ChartVisualizationTypeEnum;
    /**
     * 
     * @type {TimeComparisonDetails}
     * @memberof ChartVisualization
     */
    time_comparison_details?: TimeComparisonDetails;
}

/**
* @export
* @enum {string}
*/
export enum ChartVisualizationTypeEnum {
    line = 'line',
    table = 'table',
    doughnut = 'doughnut',
    bar = 'bar',
    highlight = 'highlight',
    map = 'map',
    summary = 'summary'
}


/**
 * Check if a given object implements the ChartVisualization interface.
 */
export function instanceOfChartVisualization(value: object): value is ChartVisualization {
    return true;
}

export function ChartVisualizationFromJSON(json: any): ChartVisualization {
    return ChartVisualizationFromJSONTyped(json, false);
}

export function ChartVisualizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChartVisualization {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'time_comparison_details': json['time_comparison_details'] == null ? undefined : TimeComparisonDetailsFromJSON(json['time_comparison_details']),
    };
}

export function ChartVisualizationToJSON(json: any): ChartVisualization {
    return ChartVisualizationToJSONTyped(json, false);
}

export function ChartVisualizationToJSONTyped(value?: ChartVisualization | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'time_comparison_details': TimeComparisonDetailsToJSON(value['time_comparison_details']),
    };
}

