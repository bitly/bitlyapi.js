/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BitlinkHistory } from './BitlinkHistory';
import {
    BitlinkHistoryFromJSON,
    BitlinkHistoryFromJSONTyped,
    BitlinkHistoryToJSON,
    BitlinkHistoryToJSONTyped,
} from './BitlinkHistory';

/**
 * 
 * @export
 * @interface BitlinkOverrideHistory
 */
export interface BitlinkOverrideHistory {
    /**
     * 
     * @type {Array<BitlinkHistory>}
     * @memberof BitlinkOverrideHistory
     */
    bitlinks?: Array<BitlinkHistory> | null;
    /**
     * 
     * @type {number}
     * @memberof BitlinkOverrideHistory
     */
    total_count?: number;
}

/**
 * Check if a given object implements the BitlinkOverrideHistory interface.
 */
export function instanceOfBitlinkOverrideHistory(value: object): value is BitlinkOverrideHistory {
    return true;
}

export function BitlinkOverrideHistoryFromJSON(json: any): BitlinkOverrideHistory {
    return BitlinkOverrideHistoryFromJSONTyped(json, false);
}

export function BitlinkOverrideHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): BitlinkOverrideHistory {
    if (json == null) {
        return json;
    }
    return {
        
        'bitlinks': json['bitlinks'] == null ? undefined : ((json['bitlinks'] as Array<any>).map(BitlinkHistoryFromJSON)),
        'total_count': json['total_count'] == null ? undefined : json['total_count'],
    };
}

export function BitlinkOverrideHistoryToJSON(json: any): BitlinkOverrideHistory {
    return BitlinkOverrideHistoryToJSONTyped(json, false);
}

export function BitlinkOverrideHistoryToJSONTyped(value?: BitlinkOverrideHistory | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bitlinks': value['bitlinks'] == null ? undefined : ((value['bitlinks'] as Array<any>).map(BitlinkHistoryToJSON)),
        'total_count': value['total_count'],
    };
}

