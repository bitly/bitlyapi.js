/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OAuthAppWithOwnerLogin } from './OAuthAppWithOwnerLogin';
import {
    OAuthAppWithOwnerLoginFromJSON,
    OAuthAppWithOwnerLoginFromJSONTyped,
    OAuthAppWithOwnerLoginToJSON,
    OAuthAppWithOwnerLoginToJSONTyped,
} from './OAuthAppWithOwnerLogin';

/**
 * 
 * @export
 * @interface Authorization
 */
export interface Authorization {
    /**
     * 
     * @type {string}
     * @memberof Authorization
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Authorization
     */
    client_id?: string;
    /**
     * ISO timestamp
     * @type {string}
     * @memberof Authorization
     */
    created?: string;
    /**
     * 
     * @type {OAuthAppWithOwnerLogin}
     * @memberof Authorization
     */
    app?: OAuthAppWithOwnerLogin;
}

/**
 * Check if a given object implements the Authorization interface.
 */
export function instanceOfAuthorization(value: object): value is Authorization {
    return true;
}

export function AuthorizationFromJSON(json: any): Authorization {
    return AuthorizationFromJSONTyped(json, false);
}

export function AuthorizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Authorization {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'client_id': json['client_id'] == null ? undefined : json['client_id'],
        'created': json['created'] == null ? undefined : json['created'],
        'app': json['app'] == null ? undefined : OAuthAppWithOwnerLoginFromJSON(json['app']),
    };
}

export function AuthorizationToJSON(json: any): Authorization {
    return AuthorizationToJSONTyped(json, false);
}

export function AuthorizationToJSONTyped(value?: Authorization | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'client_id': value['client_id'],
        'created': value['created'],
        'app': OAuthAppWithOwnerLoginToJSON(value['app']),
    };
}

