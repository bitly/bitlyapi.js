/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface QRCodeCornerResponseItem
 */
export interface QRCodeCornerResponseItem {
    /**
     * 
     * @type {string}
     * @memberof QRCodeCornerResponseItem
     */
    id?: string;
    /**
     * A QR code shape's thumbnail image data as a data url. Can be svg, png, jpg. Only used in response bodies.
     * @type {string}
     * @memberof QRCodeCornerResponseItem
     */
    thumbnail?: string;
    /**
     * Determines whether the user has acccess to this field
     * @type {boolean}
     * @memberof QRCodeCornerResponseItem
     */
    locked?: boolean;
}

/**
 * Check if a given object implements the QRCodeCornerResponseItem interface.
 */
export function instanceOfQRCodeCornerResponseItem(value: object): value is QRCodeCornerResponseItem {
    return true;
}

export function QRCodeCornerResponseItemFromJSON(json: any): QRCodeCornerResponseItem {
    return QRCodeCornerResponseItemFromJSONTyped(json, false);
}

export function QRCodeCornerResponseItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): QRCodeCornerResponseItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'thumbnail': json['thumbnail'] == null ? undefined : json['thumbnail'],
        'locked': json['locked'] == null ? undefined : json['locked'],
    };
}

export function QRCodeCornerResponseItemToJSON(json: any): QRCodeCornerResponseItem {
    return QRCodeCornerResponseItemToJSONTyped(json, false);
}

export function QRCodeCornerResponseItemToJSONTyped(value?: QRCodeCornerResponseItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'thumbnail': value['thumbnail'],
        'locked': value['locked'],
    };
}

