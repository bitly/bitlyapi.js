/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CityBitlinkClicksMetric
 */
export interface CityBitlinkClicksMetric {
    /**
     * 
     * @type {number}
     * @memberof CityBitlinkClicksMetric
     */
    bitlink_clicks?: number;
    /**
     * 
     * @type {string}
     * @memberof CityBitlinkClicksMetric
     */
    city?: string;
    /**
     * 
     * @type {string}
     * @memberof CityBitlinkClicksMetric
     */
    subregion?: string;
    /**
     * 
     * @type {string}
     * @memberof CityBitlinkClicksMetric
     */
    region?: string;
    /**
     * 
     * @type {string}
     * @memberof CityBitlinkClicksMetric
     */
    country?: string;
}

/**
 * Check if a given object implements the CityBitlinkClicksMetric interface.
 */
export function instanceOfCityBitlinkClicksMetric(value: object): value is CityBitlinkClicksMetric {
    return true;
}

export function CityBitlinkClicksMetricFromJSON(json: any): CityBitlinkClicksMetric {
    return CityBitlinkClicksMetricFromJSONTyped(json, false);
}

export function CityBitlinkClicksMetricFromJSONTyped(json: any, ignoreDiscriminator: boolean): CityBitlinkClicksMetric {
    if (json == null) {
        return json;
    }
    return {
        
        'bitlink_clicks': json['bitlink_clicks'] == null ? undefined : json['bitlink_clicks'],
        'city': json['city'] == null ? undefined : json['city'],
        'subregion': json['subregion'] == null ? undefined : json['subregion'],
        'region': json['region'] == null ? undefined : json['region'],
        'country': json['country'] == null ? undefined : json['country'],
    };
}

export function CityBitlinkClicksMetricToJSON(json: any): CityBitlinkClicksMetric {
    return CityBitlinkClicksMetricToJSONTyped(json, false);
}

export function CityBitlinkClicksMetricToJSONTyped(value?: CityBitlinkClicksMetric | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bitlink_clicks': value['bitlink_clicks'],
        'city': value['city'],
        'subregion': value['subregion'],
        'region': value['region'],
        'country': value['country'],
    };
}

