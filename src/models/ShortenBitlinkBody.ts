/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DeeplinkRule } from './DeeplinkRule';
import {
    DeeplinkRuleFromJSON,
    DeeplinkRuleFromJSONTyped,
    DeeplinkRuleToJSON,
    DeeplinkRuleToJSONTyped,
} from './DeeplinkRule';

/**
 * 
 * @export
 * @interface ShortenBitlinkBody
 */
export interface ShortenBitlinkBody {
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ShortenBitlinkBody
     */
    references?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof ShortenBitlinkBody
     */
    link?: string;
    /**
     * 
     * @type {string}
     * @memberof ShortenBitlinkBody
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ShortenBitlinkBody
     */
    long_url?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ShortenBitlinkBody
     */
    archived?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ShortenBitlinkBody
     */
    created_at?: string;
    /**
     * list of previously edited backhalfs for the bitlink - these are in reverse chronological order, with the most recently edited backhalf first
     * @type {Array<string>}
     * @memberof ShortenBitlinkBody
     */
    custom_bitlinks?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ShortenBitlinkBody
     */
    tags?: Array<string>;
    /**
     * 
     * @type {Array<DeeplinkRule>}
     * @memberof ShortenBitlinkBody
     */
    deeplinks?: Array<DeeplinkRule>;
}

/**
 * Check if a given object implements the ShortenBitlinkBody interface.
 */
export function instanceOfShortenBitlinkBody(value: object): value is ShortenBitlinkBody {
    return true;
}

export function ShortenBitlinkBodyFromJSON(json: any): ShortenBitlinkBody {
    return ShortenBitlinkBodyFromJSONTyped(json, false);
}

export function ShortenBitlinkBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShortenBitlinkBody {
    if (json == null) {
        return json;
    }
    return {
        
        'references': json['references'] == null ? undefined : json['references'],
        'link': json['link'] == null ? undefined : json['link'],
        'id': json['id'] == null ? undefined : json['id'],
        'long_url': json['long_url'] == null ? undefined : json['long_url'],
        'archived': json['archived'] == null ? undefined : json['archived'],
        'created_at': json['created_at'] == null ? undefined : json['created_at'],
        'custom_bitlinks': json['custom_bitlinks'] == null ? undefined : json['custom_bitlinks'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'deeplinks': json['deeplinks'] == null ? undefined : ((json['deeplinks'] as Array<any>).map(DeeplinkRuleFromJSON)),
    };
}

export function ShortenBitlinkBodyToJSON(json: any): ShortenBitlinkBody {
    return ShortenBitlinkBodyToJSONTyped(json, false);
}

export function ShortenBitlinkBodyToJSONTyped(value?: ShortenBitlinkBody | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'references': value['references'],
        'link': value['link'],
        'id': value['id'],
        'long_url': value['long_url'],
        'archived': value['archived'],
        'created_at': value['created_at'],
        'custom_bitlinks': value['custom_bitlinks'],
        'tags': value['tags'],
        'deeplinks': value['deeplinks'] == null ? undefined : ((value['deeplinks'] as Array<any>).map(DeeplinkRuleToJSON)),
    };
}

