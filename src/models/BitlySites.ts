/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MicrositePagination } from './MicrositePagination';
import {
    MicrositePaginationFromJSON,
    MicrositePaginationFromJSONTyped,
    MicrositePaginationToJSON,
    MicrositePaginationToJSONTyped,
} from './MicrositePagination';
import type { BitlySite } from './BitlySite';
import {
    BitlySiteFromJSON,
    BitlySiteFromJSONTyped,
    BitlySiteToJSON,
    BitlySiteToJSONTyped,
} from './BitlySite';

/**
 * 
 * @export
 * @interface BitlySites
 */
export interface BitlySites {
    /**
     * 
     * @type {string}
     * @memberof BitlySites
     */
    group_guid: string;
    /**
     * 
     * @type {Array<BitlySite>}
     * @memberof BitlySites
     */
    sites: Array<BitlySite>;
    /**
     * 
     * @type {MicrositePagination}
     * @memberof BitlySites
     */
    pagination?: MicrositePagination;
}

/**
 * Check if a given object implements the BitlySites interface.
 */
export function instanceOfBitlySites(value: object): value is BitlySites {
    if (!('group_guid' in value) || value['group_guid'] === undefined) return false;
    if (!('sites' in value) || value['sites'] === undefined) return false;
    return true;
}

export function BitlySitesFromJSON(json: any): BitlySites {
    return BitlySitesFromJSONTyped(json, false);
}

export function BitlySitesFromJSONTyped(json: any, ignoreDiscriminator: boolean): BitlySites {
    if (json == null) {
        return json;
    }
    return {
        
        'group_guid': json['group_guid'],
        'sites': ((json['sites'] as Array<any>).map(BitlySiteFromJSON)),
        'pagination': json['pagination'] == null ? undefined : json['pagination'],
    };
}

export function BitlySitesToJSON(json: any): BitlySites {
    return BitlySitesToJSONTyped(json, false);
}

export function BitlySitesToJSONTyped(value?: BitlySites | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'group_guid': value['group_guid'],
        'sites': ((value['sites'] as Array<any>).map(BitlySiteToJSON)),
        'pagination': value['pagination'],
    };
}

