/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrganizationPreference } from './OrganizationPreference';
import {
    OrganizationPreferenceFromJSON,
    OrganizationPreferenceFromJSONTyped,
    OrganizationPreferenceToJSON,
    OrganizationPreferenceToJSONTyped,
} from './OrganizationPreference';

/**
 * 
 * @export
 * @interface OrganizationPreferences
 */
export interface OrganizationPreferences {
    /**
     * 
     * @type {Array<OrganizationPreference>}
     * @memberof OrganizationPreferences
     */
    preferences?: Array<OrganizationPreference>;
}

/**
 * Check if a given object implements the OrganizationPreferences interface.
 */
export function instanceOfOrganizationPreferences(value: object): value is OrganizationPreferences {
    return true;
}

export function OrganizationPreferencesFromJSON(json: any): OrganizationPreferences {
    return OrganizationPreferencesFromJSONTyped(json, false);
}

export function OrganizationPreferencesFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationPreferences {
    if (json == null) {
        return json;
    }
    return {
        
        'preferences': json['preferences'] == null ? undefined : ((json['preferences'] as Array<any>).map(OrganizationPreferenceFromJSON)),
    };
}

export function OrganizationPreferencesToJSON(json: any): OrganizationPreferences {
    return OrganizationPreferencesToJSONTyped(json, false);
}

export function OrganizationPreferencesToJSONTyped(value?: OrganizationPreferences | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'preferences': value['preferences'] == null ? undefined : ((value['preferences'] as Array<any>).map(OrganizationPreferenceToJSON)),
    };
}

