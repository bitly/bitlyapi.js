/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QRCodeCustomizations } from './QRCodeCustomizations';
import {
    QRCodeCustomizationsFromJSON,
    QRCodeCustomizationsFromJSONTyped,
    QRCodeCustomizationsToJSON,
    QRCodeCustomizationsToJSONTyped,
} from './QRCodeCustomizations';

/**
 * A template for a set of QR code customizations
 * @export
 * @interface QRCodeTemplate
 */
export interface QRCodeTemplate {
    /**
     * The QR code template's id, as a shortid
     * @type {string}
     * @memberof QRCodeTemplate
     */
    id?: string;
    /**
     * The Bitly brand_guid preference for use in the Bitly Canva app
     * @type {string}
     * @memberof QRCodeTemplate
     */
    brand_guid?: string;
    /**
     * 
     * @type {QRCodeCustomizations}
     * @memberof QRCodeTemplate
     */
    render_customizations?: QRCodeCustomizations;
    /**
     * A boolean representing whether this is a default template premade by bitly
     * @type {boolean}
     * @memberof QRCodeTemplate
     */
    premade?: boolean;
    /**
     * A boolean representing if this template is currently active
     * @type {boolean}
     * @memberof QRCodeTemplate
     */
    is_active?: boolean;
    /**
     * The unix epoch time when the QR code template was created
     * @type {number}
     * @memberof QRCodeTemplate
     */
    created_ts?: number;
    /**
     * The unix epoch time when the QR code template was updated
     * @type {number}
     * @memberof QRCodeTemplate
     */
    modified_ts?: number;
    /**
     * The QR code template's thumbnail svg image data as a data uri
     * @type {string}
     * @memberof QRCodeTemplate
     */
    svg?: string;
}

/**
 * Check if a given object implements the QRCodeTemplate interface.
 */
export function instanceOfQRCodeTemplate(value: object): value is QRCodeTemplate {
    return true;
}

export function QRCodeTemplateFromJSON(json: any): QRCodeTemplate {
    return QRCodeTemplateFromJSONTyped(json, false);
}

export function QRCodeTemplateFromJSONTyped(json: any, ignoreDiscriminator: boolean): QRCodeTemplate {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'brand_guid': json['brand_guid'] == null ? undefined : json['brand_guid'],
        'render_customizations': json['render_customizations'] == null ? undefined : QRCodeCustomizationsFromJSON(json['render_customizations']),
        'premade': json['premade'] == null ? undefined : json['premade'],
        'is_active': json['is_active'] == null ? undefined : json['is_active'],
        'created_ts': json['created_ts'] == null ? undefined : json['created_ts'],
        'modified_ts': json['modified_ts'] == null ? undefined : json['modified_ts'],
        'svg': json['svg'] == null ? undefined : json['svg'],
    };
}

export function QRCodeTemplateToJSON(json: any): QRCodeTemplate {
    return QRCodeTemplateToJSONTyped(json, false);
}

export function QRCodeTemplateToJSONTyped(value?: QRCodeTemplate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'brand_guid': value['brand_guid'],
        'render_customizations': QRCodeCustomizationsToJSON(value['render_customizations']),
        'premade': value['premade'],
        'is_active': value['is_active'],
        'created_ts': value['created_ts'],
        'modified_ts': value['modified_ts'],
        'svg': value['svg'],
    };
}

