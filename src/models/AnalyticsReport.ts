/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReportSettings } from './ReportSettings';
import {
    ReportSettingsFromJSON,
    ReportSettingsFromJSONTyped,
    ReportSettingsToJSON,
    ReportSettingsToJSONTyped,
} from './ReportSettings';
import type { ReportType } from './ReportType';
import {
    ReportTypeFromJSON,
    ReportTypeFromJSONTyped,
    ReportTypeToJSON,
    ReportTypeToJSONTyped,
} from './ReportType';

/**
 * 
 * @export
 * @interface AnalyticsReport
 */
export interface AnalyticsReport {
    /**
     * 
     * @type {string}
     * @memberof AnalyticsReport
     */
    report_guid?: string;
    /**
     * 
     * @type {string}
     * @memberof AnalyticsReport
     */
    login?: string;
    /**
     * 
     * @type {string}
     * @memberof AnalyticsReport
     */
    group_guid?: string;
    /**
     * 
     * @type {string}
     * @memberof AnalyticsReport
     */
    last_modified_by?: string;
    /**
     * 
     * @type {string}
     * @memberof AnalyticsReport
     */
    user_full_name?: string;
    /**
     * 
     * @type {string}
     * @memberof AnalyticsReport
     */
    created?: string;
    /**
     * 
     * @type {string}
     * @memberof AnalyticsReport
     */
    modified?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AnalyticsReport
     */
    is_active?: boolean;
    /**
     * 
     * @type {ReportType}
     * @memberof AnalyticsReport
     */
    report_type?: ReportType;
    /**
     * 
     * @type {ReportSettings}
     * @memberof AnalyticsReport
     */
    settings?: ReportSettings;
}



/**
 * Check if a given object implements the AnalyticsReport interface.
 */
export function instanceOfAnalyticsReport(value: object): value is AnalyticsReport {
    return true;
}

export function AnalyticsReportFromJSON(json: any): AnalyticsReport {
    return AnalyticsReportFromJSONTyped(json, false);
}

export function AnalyticsReportFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalyticsReport {
    if (json == null) {
        return json;
    }
    return {
        
        'report_guid': json['report_guid'] == null ? undefined : json['report_guid'],
        'login': json['login'] == null ? undefined : json['login'],
        'group_guid': json['group_guid'] == null ? undefined : json['group_guid'],
        'last_modified_by': json['last_modified_by'] == null ? undefined : json['last_modified_by'],
        'user_full_name': json['user_full_name'] == null ? undefined : json['user_full_name'],
        'created': json['created'] == null ? undefined : json['created'],
        'modified': json['modified'] == null ? undefined : json['modified'],
        'is_active': json['is_active'] == null ? undefined : json['is_active'],
        'report_type': json['report_type'] == null ? undefined : ReportTypeFromJSON(json['report_type']),
        'settings': json['settings'] == null ? undefined : ReportSettingsFromJSON(json['settings']),
    };
}

export function AnalyticsReportToJSON(json: any): AnalyticsReport {
    return AnalyticsReportToJSONTyped(json, false);
}

export function AnalyticsReportToJSONTyped(value?: AnalyticsReport | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'report_guid': value['report_guid'],
        'login': value['login'],
        'group_guid': value['group_guid'],
        'last_modified_by': value['last_modified_by'],
        'user_full_name': value['user_full_name'],
        'created': value['created'],
        'modified': value['modified'],
        'is_active': value['is_active'],
        'report_type': ReportTypeToJSON(value['report_type']),
        'settings': ReportSettingsToJSON(value['settings']),
    };
}

