/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QRCodeCustomizationsPublic } from './QRCodeCustomizationsPublic';
import {
    QRCodeCustomizationsPublicFromJSON,
    QRCodeCustomizationsPublicFromJSONTyped,
    QRCodeCustomizationsPublicToJSON,
    QRCodeCustomizationsPublicToJSONTyped,
} from './QRCodeCustomizationsPublic';

/**
 * Customization and content values for a QR code created through the public API
 * @export
 * @interface PublicUpdateQRCodeRequest
 */
export interface PublicUpdateQRCodeRequest {
    /**
     * 
     * @type {string}
     * @memberof PublicUpdateQRCodeRequest
     */
    title?: string;
    /**
     * 
     * @type {QRCodeCustomizationsPublic}
     * @memberof PublicUpdateQRCodeRequest
     */
    render_customizations?: QRCodeCustomizationsPublic;
    /**
     * A boolean representing if the QR code has been archived
     * @type {boolean}
     * @memberof PublicUpdateQRCodeRequest
     */
    archived?: boolean;
}

/**
 * Check if a given object implements the PublicUpdateQRCodeRequest interface.
 */
export function instanceOfPublicUpdateQRCodeRequest(value: object): value is PublicUpdateQRCodeRequest {
    return true;
}

export function PublicUpdateQRCodeRequestFromJSON(json: any): PublicUpdateQRCodeRequest {
    return PublicUpdateQRCodeRequestFromJSONTyped(json, false);
}

export function PublicUpdateQRCodeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicUpdateQRCodeRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'] == null ? undefined : json['title'],
        'render_customizations': json['render_customizations'] == null ? undefined : QRCodeCustomizationsPublicFromJSON(json['render_customizations']),
        'archived': json['archived'] == null ? undefined : json['archived'],
    };
}

export function PublicUpdateQRCodeRequestToJSON(json: any): PublicUpdateQRCodeRequest {
    return PublicUpdateQRCodeRequestToJSONTyped(json, false);
}

export function PublicUpdateQRCodeRequestToJSONTyped(value?: PublicUpdateQRCodeRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'render_customizations': QRCodeCustomizationsPublicToJSON(value['render_customizations']),
        'archived': value['archived'],
    };
}

