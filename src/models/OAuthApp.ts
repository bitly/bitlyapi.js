/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OAuthApp
 */
export interface OAuthApp {
    /**
     * 
     * @type {string}
     * @memberof OAuthApp
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof OAuthApp
     */
    client_id: string;
    /**
     * 
     * @type {string}
     * @memberof OAuthApp
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof OAuthApp
     */
    link: string;
    /**
     * 
     * @type {boolean}
     * @memberof OAuthApp
     */
    require_oauth_pkce: boolean;
}

/**
 * Check if a given object implements the OAuthApp interface.
 */
export function instanceOfOAuthApp(value: object): value is OAuthApp {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('client_id' in value) || value['client_id'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('link' in value) || value['link'] === undefined) return false;
    if (!('require_oauth_pkce' in value) || value['require_oauth_pkce'] === undefined) return false;
    return true;
}

export function OAuthAppFromJSON(json: any): OAuthApp {
    return OAuthAppFromJSONTyped(json, false);
}

export function OAuthAppFromJSONTyped(json: any, ignoreDiscriminator: boolean): OAuthApp {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'client_id': json['client_id'],
        'description': json['description'],
        'link': json['link'],
        'require_oauth_pkce': json['require_oauth_pkce'],
    };
}

export function OAuthAppToJSON(json: any): OAuthApp {
    return OAuthAppToJSONTyped(json, false);
}

export function OAuthAppToJSONTyped(value?: OAuthApp | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'client_id': value['client_id'],
        'description': value['description'],
        'link': value['link'],
        'require_oauth_pkce': value['require_oauth_pkce'],
    };
}

