/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StripeCustomerInvoiceSettings } from './StripeCustomerInvoiceSettings';
import {
    StripeCustomerInvoiceSettingsFromJSON,
    StripeCustomerInvoiceSettingsFromJSONTyped,
    StripeCustomerInvoiceSettingsToJSON,
    StripeCustomerInvoiceSettingsToJSONTyped,
} from './StripeCustomerInvoiceSettings';
import type { StripeAddress } from './StripeAddress';
import {
    StripeAddressFromJSON,
    StripeAddressFromJSONTyped,
    StripeAddressToJSON,
    StripeAddressToJSONTyped,
} from './StripeAddress';

/**
 * 
 * @export
 * @interface StripeCustomer
 */
export interface StripeCustomer {
    /**
     * Unique identifier for the Stripe customer
     * @type {string}
     * @memberof StripeCustomer
     */
    id?: string;
    /**
     * 
     * @type {StripeAddress}
     * @memberof StripeCustomer
     */
    address?: StripeAddress;
    /**
     * Customer's full name
     * @type {string}
     * @memberof StripeCustomer
     */
    name?: string;
    /**
     * Customer's phone number
     * @type {string}
     * @memberof StripeCustomer
     */
    phone?: string;
    /**
     * 
     * @type {StripeCustomerInvoiceSettings}
     * @memberof StripeCustomer
     */
    invoice_settings?: StripeCustomerInvoiceSettings;
    /**
     * Set of key-value pairs for storing additional information
     * @type {{ [key: string]: string; }}
     * @memberof StripeCustomer
     */
    metadata?: { [key: string]: string; };
    /**
     * Customer's email address
     * @type {string}
     * @memberof StripeCustomer
     */
    email?: string;
    /**
     * Three-letter ISO currency code
     * @type {string}
     * @memberof StripeCustomer
     */
    currency?: string;
}

/**
 * Check if a given object implements the StripeCustomer interface.
 */
export function instanceOfStripeCustomer(value: object): value is StripeCustomer {
    return true;
}

export function StripeCustomerFromJSON(json: any): StripeCustomer {
    return StripeCustomerFromJSONTyped(json, false);
}

export function StripeCustomerFromJSONTyped(json: any, ignoreDiscriminator: boolean): StripeCustomer {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'address': json['address'] == null ? undefined : StripeAddressFromJSON(json['address']),
        'name': json['name'] == null ? undefined : json['name'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'invoice_settings': json['invoice_settings'] == null ? undefined : StripeCustomerInvoiceSettingsFromJSON(json['invoice_settings']),
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'email': json['email'] == null ? undefined : json['email'],
        'currency': json['currency'] == null ? undefined : json['currency'],
    };
}

export function StripeCustomerToJSON(json: any): StripeCustomer {
    return StripeCustomerToJSONTyped(json, false);
}

export function StripeCustomerToJSONTyped(value?: StripeCustomer | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'address': StripeAddressToJSON(value['address']),
        'name': value['name'],
        'phone': value['phone'],
        'invoice_settings': StripeCustomerInvoiceSettingsToJSON(value['invoice_settings']),
        'metadata': value['metadata'],
        'email': value['email'],
        'currency': value['currency'],
    };
}

