/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BulkAddResponseData } from './BulkAddResponseData';
import {
    BulkAddResponseDataFromJSON,
    BulkAddResponseDataFromJSONTyped,
    BulkAddResponseDataToJSON,
    BulkAddResponseDataToJSONTyped,
} from './BulkAddResponseData';

/**
 * 
 * @export
 * @interface BulkAddResponse
 */
export interface BulkAddResponse {
    /**
     * 
     * @type {string}
     * @memberof BulkAddResponse
     */
    message?: string;
    /**
     * 
     * @type {BulkAddResponseData}
     * @memberof BulkAddResponse
     */
    data?: BulkAddResponseData;
}

/**
 * Check if a given object implements the BulkAddResponse interface.
 */
export function instanceOfBulkAddResponse(value: object): value is BulkAddResponse {
    return true;
}

export function BulkAddResponseFromJSON(json: any): BulkAddResponse {
    return BulkAddResponseFromJSONTyped(json, false);
}

export function BulkAddResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BulkAddResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['message'] == null ? undefined : json['message'],
        'data': json['data'] == null ? undefined : BulkAddResponseDataFromJSON(json['data']),
    };
}

export function BulkAddResponseToJSON(json: any): BulkAddResponse {
    return BulkAddResponseToJSONTyped(json, false);
}

export function BulkAddResponseToJSONTyped(value?: BulkAddResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'message': value['message'],
        'data': BulkAddResponseDataToJSON(value['data']),
    };
}

