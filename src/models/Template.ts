/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BitlySiteAppearance } from './BitlySiteAppearance';
import {
    BitlySiteAppearanceFromJSON,
    BitlySiteAppearanceFromJSONTyped,
    BitlySiteAppearanceToJSON,
    BitlySiteAppearanceToJSONTyped,
} from './BitlySiteAppearance';
import type { SiteBlock } from './SiteBlock';
import {
    SiteBlockFromJSON,
    SiteBlockFromJSONTyped,
    SiteBlockToJSON,
    SiteBlockToJSONTyped,
} from './SiteBlock';
import type { BitlySiteContent } from './BitlySiteContent';
import {
    BitlySiteContentFromJSON,
    BitlySiteContentFromJSONTyped,
    BitlySiteContentToJSON,
    BitlySiteContentToJSONTyped,
} from './BitlySiteContent';

/**
 * 
 * @export
 * @interface Template
 */
export interface Template {
    /**
     * 
     * @type {string}
     * @memberof Template
     */
    template_guid?: string;
    /**
     * 
     * @type {BitlySiteContent}
     * @memberof Template
     */
    content?: BitlySiteContent;
    /**
     * 
     * @type {BitlySiteAppearance}
     * @memberof Template
     */
    appearance?: BitlySiteAppearance;
    /**
     * 
     * @type {Array<SiteBlock>}
     * @memberof Template
     */
    blocks?: Array<SiteBlock>;
    /**
     * 
     * @type {string}
     * @memberof Template
     */
    status?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Template
     */
    categories?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Template
     */
    created?: string;
    /**
     * 
     * @type {string}
     * @memberof Template
     */
    modified?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Template
     */
    is_active?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Template
     */
    is_paid?: boolean;
}

/**
 * Check if a given object implements the Template interface.
 */
export function instanceOfTemplate(value: object): value is Template {
    return true;
}

export function TemplateFromJSON(json: any): Template {
    return TemplateFromJSONTyped(json, false);
}

export function TemplateFromJSONTyped(json: any, ignoreDiscriminator: boolean): Template {
    if (json == null) {
        return json;
    }
    return {
        
        'template_guid': json['template_guid'] == null ? undefined : json['template_guid'],
        'content': json['content'] == null ? undefined : BitlySiteContentFromJSON(json['content']),
        'appearance': json['appearance'] == null ? undefined : BitlySiteAppearanceFromJSON(json['appearance']),
        'blocks': json['blocks'] == null ? undefined : ((json['blocks'] as Array<any>).map(SiteBlockFromJSON)),
        'status': json['status'] == null ? undefined : json['status'],
        'categories': json['categories'] == null ? undefined : json['categories'],
        'created': json['created'] == null ? undefined : json['created'],
        'modified': json['modified'] == null ? undefined : json['modified'],
        'is_active': json['is_active'] == null ? undefined : json['is_active'],
        'is_paid': json['is_paid'] == null ? undefined : json['is_paid'],
    };
}

export function TemplateToJSON(json: any): Template {
    return TemplateToJSONTyped(json, false);
}

export function TemplateToJSONTyped(value?: Template | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'template_guid': value['template_guid'],
        'content': BitlySiteContentToJSON(value['content']),
        'appearance': BitlySiteAppearanceToJSON(value['appearance']),
        'blocks': value['blocks'] == null ? undefined : ((value['blocks'] as Array<any>).map(SiteBlockToJSON)),
        'status': value['status'],
        'categories': value['categories'],
        'created': value['created'],
        'modified': value['modified'],
        'is_active': value['is_active'],
        'is_paid': value['is_paid'],
    };
}

