/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DomainPurchase
 */
export interface DomainPurchase {
    /**
     * 
     * @type {string}
     * @memberof DomainPurchase
     */
    domain?: string;
    /**
     * 
     * @type {number}
     * @memberof DomainPurchase
     */
    order_id?: number;
    /**
     * 
     * @type {string}
     * @memberof DomainPurchase
     */
    vendor?: string;
    /**
     * 
     * @type {string}
     * @memberof DomainPurchase
     */
    org_guid?: string;
    /**
     * ISO timestamp
     * @type {string}
     * @memberof DomainPurchase
     */
    created?: string;
}

/**
 * Check if a given object implements the DomainPurchase interface.
 */
export function instanceOfDomainPurchase(value: object): value is DomainPurchase {
    return true;
}

export function DomainPurchaseFromJSON(json: any): DomainPurchase {
    return DomainPurchaseFromJSONTyped(json, false);
}

export function DomainPurchaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainPurchase {
    if (json == null) {
        return json;
    }
    return {
        
        'domain': json['domain'] == null ? undefined : json['domain'],
        'order_id': json['order_id'] == null ? undefined : json['order_id'],
        'vendor': json['vendor'] == null ? undefined : json['vendor'],
        'org_guid': json['org_guid'] == null ? undefined : json['org_guid'],
        'created': json['created'] == null ? undefined : json['created'],
    };
}

export function DomainPurchaseToJSON(json: any): DomainPurchase {
    return DomainPurchaseToJSONTyped(json, false);
}

export function DomainPurchaseToJSONTyped(value?: DomainPurchase | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'domain': value['domain'],
        'order_id': value['order_id'],
        'vendor': value['vendor'],
        'org_guid': value['org_guid'],
        'created': value['created'],
    };
}

