/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserPreferenceBody
 */
export interface UserPreferenceBody {
    /**
     * 
     * @type {string}
     * @memberof UserPreferenceBody
     */
    preference?: string;
    /**
     * 
     * @type {string}
     * @memberof UserPreferenceBody
     */
    value?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserPreferenceBody
     */
    is_active?: boolean;
}

/**
 * Check if a given object implements the UserPreferenceBody interface.
 */
export function instanceOfUserPreferenceBody(value: object): value is UserPreferenceBody {
    return true;
}

export function UserPreferenceBodyFromJSON(json: any): UserPreferenceBody {
    return UserPreferenceBodyFromJSONTyped(json, false);
}

export function UserPreferenceBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserPreferenceBody {
    if (json == null) {
        return json;
    }
    return {
        
        'preference': json['preference'] == null ? undefined : json['preference'],
        'value': json['value'] == null ? undefined : json['value'],
        'is_active': json['is_active'] == null ? undefined : json['is_active'],
    };
}

export function UserPreferenceBodyToJSON(json: any): UserPreferenceBody {
    return UserPreferenceBodyToJSONTyped(json, false);
}

export function UserPreferenceBodyToJSONTyped(value?: UserPreferenceBody | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'preference': value['preference'],
        'value': value['value'],
        'is_active': value['is_active'],
    };
}

