/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReferrersByDomain } from './ReferrersByDomain';
import {
    ReferrersByDomainFromJSON,
    ReferrersByDomainFromJSONTyped,
    ReferrersByDomainToJSON,
    ReferrersByDomainToJSONTyped,
} from './ReferrersByDomain';

/**
 * 
 * @export
 * @interface ReferrersByDomains
 */
export interface ReferrersByDomains {
    /**
     * 
     * @type {string}
     * @memberof ReferrersByDomains
     */
    unit?: string;
    /**
     * 
     * @type {number}
     * @memberof ReferrersByDomains
     */
    units?: number;
    /**
     * 
     * @type {string}
     * @memberof ReferrersByDomains
     */
    facet?: ReferrersByDomainsFacetEnum;
    /**
     * 
     * @type {string}
     * @memberof ReferrersByDomains
     */
    unit_reference?: string;
    /**
     * 
     * @type {Array<ReferrersByDomain>}
     * @memberof ReferrersByDomains
     */
    referrers_by_domain?: Array<ReferrersByDomain>;
}

/**
* @export
* @enum {string}
*/
export enum ReferrersByDomainsFacetEnum {
    referrers_by_domains = 'referrers_by_domains'
}


/**
 * Check if a given object implements the ReferrersByDomains interface.
 */
export function instanceOfReferrersByDomains(value: object): value is ReferrersByDomains {
    return true;
}

export function ReferrersByDomainsFromJSON(json: any): ReferrersByDomains {
    return ReferrersByDomainsFromJSONTyped(json, false);
}

export function ReferrersByDomainsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReferrersByDomains {
    if (json == null) {
        return json;
    }
    return {
        
        'unit': json['unit'] == null ? undefined : json['unit'],
        'units': json['units'] == null ? undefined : json['units'],
        'facet': json['facet'] == null ? undefined : json['facet'],
        'unit_reference': json['unit_reference'] == null ? undefined : json['unit_reference'],
        'referrers_by_domain': json['referrers_by_domain'] == null ? undefined : ((json['referrers_by_domain'] as Array<any>).map(ReferrersByDomainFromJSON)),
    };
}

export function ReferrersByDomainsToJSON(json: any): ReferrersByDomains {
    return ReferrersByDomainsToJSONTyped(json, false);
}

export function ReferrersByDomainsToJSONTyped(value?: ReferrersByDomains | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'unit': value['unit'],
        'units': value['units'],
        'facet': value['facet'],
        'unit_reference': value['unit_reference'],
        'referrers_by_domain': value['referrers_by_domain'] == null ? undefined : ((value['referrers_by_domain'] as Array<any>).map(ReferrersByDomainToJSON)),
    };
}

