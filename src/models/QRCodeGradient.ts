/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GradientColor } from './GradientColor';
import {
    GradientColorFromJSON,
    GradientColorFromJSONTyped,
    GradientColorToJSON,
    GradientColorToJSONTyped,
} from './GradientColor';

/**
 * 
 * @export
 * @interface QRCodeGradient
 */
export interface QRCodeGradient {
    /**
     * The style of the gradient. Can be either linear or radial.
     * @type {string}
     * @memberof QRCodeGradient
     */
    style?: QRCodeGradientStyleEnum;
    /**
     * The angle by which the gradient will be rotated. Only applies to linear gradients.
     * @type {number}
     * @memberof QRCodeGradient
     */
    angle?: number;
    /**
     * The list of hex colors and their offsets to be used in the gradient.
     * @type {Array<GradientColor>}
     * @memberof QRCodeGradient
     */
    colors?: Array<GradientColor>;
    /**
     * Ignore gradient mask on corners
     * @type {boolean}
     * @memberof QRCodeGradient
     */
    exclude_corners?: boolean;
}

/**
* @export
* @enum {string}
*/
export enum QRCodeGradientStyleEnum {
    no_gradient = 'no_gradient',
    linear = 'linear',
    radial = 'radial'
}


/**
 * Check if a given object implements the QRCodeGradient interface.
 */
export function instanceOfQRCodeGradient(value: object): value is QRCodeGradient {
    return true;
}

export function QRCodeGradientFromJSON(json: any): QRCodeGradient {
    return QRCodeGradientFromJSONTyped(json, false);
}

export function QRCodeGradientFromJSONTyped(json: any, ignoreDiscriminator: boolean): QRCodeGradient {
    if (json == null) {
        return json;
    }
    return {
        
        'style': json['style'] == null ? undefined : json['style'],
        'angle': json['angle'] == null ? undefined : json['angle'],
        'colors': json['colors'] == null ? undefined : ((json['colors'] as Array<any>).map(GradientColorFromJSON)),
        'exclude_corners': json['exclude_corners'] == null ? undefined : json['exclude_corners'],
    };
}

export function QRCodeGradientToJSON(json: any): QRCodeGradient {
    return QRCodeGradientToJSONTyped(json, false);
}

export function QRCodeGradientToJSONTyped(value?: QRCodeGradient | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'style': value['style'],
        'angle': value['angle'],
        'colors': value['colors'] == null ? undefined : ((value['colors'] as Array<any>).map(GradientColorToJSON)),
        'exclude_corners': value['exclude_corners'],
    };
}

