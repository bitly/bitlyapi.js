/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UsersPagination } from './UsersPagination';
import {
    UsersPaginationFromJSON,
    UsersPaginationFromJSONTyped,
    UsersPaginationToJSON,
    UsersPaginationToJSONTyped,
} from './UsersPagination';
import type { UserInternal } from './UserInternal';
import {
    UserInternalFromJSON,
    UserInternalFromJSONTyped,
    UserInternalToJSON,
    UserInternalToJSONTyped,
} from './UserInternal';

/**
 * 
 * @export
 * @interface Users
 */
export interface Users {
    /**
     * 
     * @type {Array<UserInternal>}
     * @memberof Users
     */
    users?: Array<UserInternal>;
    /**
     * 
     * @type {UsersPagination}
     * @memberof Users
     */
    pagination?: UsersPagination;
    /**
     * 
     * @type {string}
     * @memberof Users
     */
    full_name_filter?: string;
}

/**
 * Check if a given object implements the Users interface.
 */
export function instanceOfUsers(value: object): value is Users {
    return true;
}

export function UsersFromJSON(json: any): Users {
    return UsersFromJSONTyped(json, false);
}

export function UsersFromJSONTyped(json: any, ignoreDiscriminator: boolean): Users {
    if (json == null) {
        return json;
    }
    return {
        
        'users': json['users'] == null ? undefined : ((json['users'] as Array<any>).map(UserInternalFromJSON)),
        'pagination': json['pagination'] == null ? undefined : UsersPaginationFromJSON(json['pagination']),
        'full_name_filter': json['fullNameFilter'] == null ? undefined : json['fullNameFilter'],
    };
}

export function UsersToJSON(json: any): Users {
    return UsersToJSONTyped(json, false);
}

export function UsersToJSONTyped(value?: Users | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'users': value['users'] == null ? undefined : ((value['users'] as Array<any>).map(UserInternalToJSON)),
        'pagination': UsersPaginationToJSON(value['pagination']),
        'fullNameFilter': value['full_name_filter'],
    };
}

