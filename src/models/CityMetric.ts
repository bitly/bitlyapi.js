/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CityMetric
 */
export interface CityMetric {
    /**
     * 
     * @type {number}
     * @memberof CityMetric
     */
    clicks?: number;
    /**
     * 
     * @type {string}
     * @memberof CityMetric
     */
    city?: string;
    /**
     * 
     * @type {string}
     * @memberof CityMetric
     */
    subregion?: string;
    /**
     * 
     * @type {string}
     * @memberof CityMetric
     */
    region?: string;
    /**
     * 
     * @type {string}
     * @memberof CityMetric
     */
    country?: string;
}

/**
 * Check if a given object implements the CityMetric interface.
 */
export function instanceOfCityMetric(value: object): value is CityMetric {
    return true;
}

export function CityMetricFromJSON(json: any): CityMetric {
    return CityMetricFromJSONTyped(json, false);
}

export function CityMetricFromJSONTyped(json: any, ignoreDiscriminator: boolean): CityMetric {
    if (json == null) {
        return json;
    }
    return {
        
        'clicks': json['clicks'] == null ? undefined : json['clicks'],
        'city': json['city'] == null ? undefined : json['city'],
        'subregion': json['subregion'] == null ? undefined : json['subregion'],
        'region': json['region'] == null ? undefined : json['region'],
        'country': json['country'] == null ? undefined : json['country'],
    };
}

export function CityMetricToJSON(json: any): CityMetric {
    return CityMetricToJSONTyped(json, false);
}

export function CityMetricToJSONTyped(value?: CityMetric | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'clicks': value['clicks'],
        'city': value['city'],
        'subregion': value['subregion'],
        'region': value['region'],
        'country': value['country'],
    };
}

