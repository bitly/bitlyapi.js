/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * 
 * @export
 * @enum {string}
 */
export enum QRCodeDotPatternType {
    standard = 'standard',
    circle = 'circle',
    block = 'block',
    blob = 'blob',
    rounded = 'rounded',
    vertical = 'vertical',
    horizontal = 'horizontal',
    triangle = 'triangle',
    heart = 'heart',
    star = 'star',
    diamond = 'diamond'
}


export function instanceOfQRCodeDotPatternType(value: any): boolean {
    for (const key in QRCodeDotPatternType) {
        if (Object.prototype.hasOwnProperty.call(QRCodeDotPatternType, key)) {
            if (QRCodeDotPatternType[key as keyof typeof QRCodeDotPatternType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function QRCodeDotPatternTypeFromJSON(json: any): QRCodeDotPatternType {
    return QRCodeDotPatternTypeFromJSONTyped(json, false);
}

export function QRCodeDotPatternTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): QRCodeDotPatternType {
    return json as QRCodeDotPatternType;
}

export function QRCodeDotPatternTypeToJSON(value?: QRCodeDotPatternType | null): any {
    return value as any;
}

export function QRCodeDotPatternTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): QRCodeDotPatternType {
    return value as QRCodeDotPatternType;
}

