/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QRCodeHistoryEntry } from './QRCodeHistoryEntry';
import {
    QRCodeHistoryEntryFromJSON,
    QRCodeHistoryEntryFromJSONTyped,
    QRCodeHistoryEntryToJSON,
    QRCodeHistoryEntryToJSONTyped,
} from './QRCodeHistoryEntry';

/**
 * QR Code history list response
 * @export
 * @interface QRCodeHistory
 */
export interface QRCodeHistory {
    /**
     * 
     * @type {Array<QRCodeHistoryEntry>}
     * @memberof QRCodeHistory
     */
    qrc_history?: Array<QRCodeHistoryEntry>;
    /**
     * 
     * @type {number}
     * @memberof QRCodeHistory
     */
    total_count?: number;
}

/**
 * Check if a given object implements the QRCodeHistory interface.
 */
export function instanceOfQRCodeHistory(value: object): value is QRCodeHistory {
    return true;
}

export function QRCodeHistoryFromJSON(json: any): QRCodeHistory {
    return QRCodeHistoryFromJSONTyped(json, false);
}

export function QRCodeHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): QRCodeHistory {
    if (json == null) {
        return json;
    }
    return {
        
        'qrc_history': json['qrc_history'] == null ? undefined : ((json['qrc_history'] as Array<any>).map(QRCodeHistoryEntryFromJSON)),
        'total_count': json['total_count'] == null ? undefined : json['total_count'],
    };
}

export function QRCodeHistoryToJSON(json: any): QRCodeHistory {
    return QRCodeHistoryToJSONTyped(json, false);
}

export function QRCodeHistoryToJSONTyped(value?: QRCodeHistory | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'qrc_history': value['qrc_history'] == null ? undefined : ((value['qrc_history'] as Array<any>).map(QRCodeHistoryEntryToJSON)),
        'total_count': value['total_count'],
    };
}

