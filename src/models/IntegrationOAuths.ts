/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IntegrationOAuth } from './IntegrationOAuth';
import {
    IntegrationOAuthFromJSON,
    IntegrationOAuthFromJSONTyped,
    IntegrationOAuthToJSON,
    IntegrationOAuthToJSONTyped,
} from './IntegrationOAuth';

/**
 * 
 * @export
 * @interface IntegrationOAuths
 */
export interface IntegrationOAuths {
    /**
     * 
     * @type {Array<IntegrationOAuth>}
     * @memberof IntegrationOAuths
     */
    integration_oauths?: Array<IntegrationOAuth>;
}

/**
 * Check if a given object implements the IntegrationOAuths interface.
 */
export function instanceOfIntegrationOAuths(value: object): value is IntegrationOAuths {
    return true;
}

export function IntegrationOAuthsFromJSON(json: any): IntegrationOAuths {
    return IntegrationOAuthsFromJSONTyped(json, false);
}

export function IntegrationOAuthsFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntegrationOAuths {
    if (json == null) {
        return json;
    }
    return {
        
        'integration_oauths': json['integration_oauths'] == null ? undefined : ((json['integration_oauths'] as Array<any>).map(IntegrationOAuthFromJSON)),
    };
}

export function IntegrationOAuthsToJSON(json: any): IntegrationOAuths {
    return IntegrationOAuthsToJSONTyped(json, false);
}

export function IntegrationOAuthsToJSONTyped(value?: IntegrationOAuths | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'integration_oauths': value['integration_oauths'] == null ? undefined : ((value['integration_oauths'] as Array<any>).map(IntegrationOAuthToJSON)),
    };
}

