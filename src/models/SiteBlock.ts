/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TextBlockAppearance } from './TextBlockAppearance';
import {
    TextBlockAppearanceFromJSON,
    TextBlockAppearanceFromJSONTyped,
    TextBlockAppearanceToJSON,
    TextBlockAppearanceToJSONTyped,
} from './TextBlockAppearance';
import type { SiteBlockTypeEnum } from './SiteBlockTypeEnum';
import {
    SiteBlockTypeEnumFromJSON,
    SiteBlockTypeEnumFromJSONTyped,
    SiteBlockTypeEnumToJSON,
    SiteBlockTypeEnumToJSONTyped,
} from './SiteBlockTypeEnum';
import type { SiteBlockContent } from './SiteBlockContent';
import {
    SiteBlockContentFromJSON,
    SiteBlockContentFromJSONTyped,
    SiteBlockContentToJSON,
    SiteBlockContentToJSONTyped,
} from './SiteBlockContent';

/**
 * 
 * @export
 * @interface SiteBlock
 */
export interface SiteBlock {
    /**
     * 
     * @type {string}
     * @memberof SiteBlock
     */
    container_id?: string;
    /**
     * 
     * @type {string}
     * @memberof SiteBlock
     */
    scheme?: string;
    /**
     * 
     * @type {SiteBlockContent}
     * @memberof SiteBlock
     */
    content?: SiteBlockContent;
    /**
     * 
     * @type {TextBlockAppearance}
     * @memberof SiteBlock
     */
    appearance?: TextBlockAppearance;
    /**
     * 
     * @type {string}
     * @memberof SiteBlock
     */
    site_id?: string;
    /**
     * 
     * @type {string}
     * @memberof SiteBlock
     */
    block_id?: string;
    /**
     * 
     * @type {number}
     * @memberof SiteBlock
     */
    sort_order?: number;
    /**
     * 
     * @type {string}
     * @memberof SiteBlock
     */
    schedule_start?: string;
    /**
     * 
     * @type {string}
     * @memberof SiteBlock
     */
    schedule_end?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SiteBlock
     */
    is_active: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SiteBlock
     */
    is_pinned?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SiteBlock
     */
    is_sample?: boolean;
    /**
     * 
     * @type {SiteBlockTypeEnum}
     * @memberof SiteBlock
     */
    type?: SiteBlockTypeEnum;
}



/**
 * Check if a given object implements the SiteBlock interface.
 */
export function instanceOfSiteBlock(value: object): value is SiteBlock {
    if (!('is_active' in value) || value['is_active'] === undefined) return false;
    return true;
}

export function SiteBlockFromJSON(json: any): SiteBlock {
    return SiteBlockFromJSONTyped(json, false);
}

export function SiteBlockFromJSONTyped(json: any, ignoreDiscriminator: boolean): SiteBlock {
    if (json == null) {
        return json;
    }
    return {
        
        'container_id': json['container_id'] == null ? undefined : json['container_id'],
        'scheme': json['scheme'] == null ? undefined : json['scheme'],
        'content': json['content'] == null ? undefined : json['content'],
        'appearance': json['appearance'] == null ? undefined : json['appearance'],
        'site_id': json['site_id'] == null ? undefined : json['site_id'],
        'block_id': json['block_id'] == null ? undefined : json['block_id'],
        'sort_order': json['sort_order'] == null ? undefined : json['sort_order'],
        'schedule_start': json['schedule_start'] == null ? undefined : json['schedule_start'],
        'schedule_end': json['schedule_end'] == null ? undefined : json['schedule_end'],
        'is_active': json['is_active'],
        'is_pinned': json['is_pinned'] == null ? undefined : json['is_pinned'],
        'is_sample': json['is_sample'] == null ? undefined : json['is_sample'],
        'type': json['type'] == null ? undefined : SiteBlockTypeEnumFromJSON(json['type']),
    };
}

export function SiteBlockToJSON(json: any): SiteBlock {
    return SiteBlockToJSONTyped(json, false);
}

export function SiteBlockToJSONTyped(value?: SiteBlock | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'container_id': value['container_id'],
        'scheme': value['scheme'],
        'content': value['content'],
        'appearance': value['appearance'],
        'site_id': value['site_id'],
        'block_id': value['block_id'],
        'sort_order': value['sort_order'],
        'schedule_start': value['schedule_start'],
        'schedule_end': value['schedule_end'],
        'is_active': value['is_active'],
        'is_pinned': value['is_pinned'],
        'is_sample': value['is_sample'],
        'type': SiteBlockTypeEnumToJSON(value['type']),
    };
}

