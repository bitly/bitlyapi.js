/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BulkUpdateRequest
 */
export interface BulkUpdateRequest {
    /**
     * archive or edit_tags
     * @type {string}
     * @memberof BulkUpdateRequest
     */
    action: BulkUpdateRequestActionEnum;
    /**
     * 
     * @type {boolean}
     * @memberof BulkUpdateRequest
     */
    archive?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof BulkUpdateRequest
     */
    add_tags?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof BulkUpdateRequest
     */
    remove_tags?: Array<string>;
    /**
     * this is limited to 100 bitlink ids
     * @type {Array<string>}
     * @memberof BulkUpdateRequest
     */
    links?: Array<string>;
}

/**
* @export
* @enum {string}
*/
export enum BulkUpdateRequestActionEnum {
    archive = 'archive',
    edit_tags = 'edit_tags'
}


/**
 * Check if a given object implements the BulkUpdateRequest interface.
 */
export function instanceOfBulkUpdateRequest(value: object): value is BulkUpdateRequest {
    if (!('action' in value) || value['action'] === undefined) return false;
    return true;
}

export function BulkUpdateRequestFromJSON(json: any): BulkUpdateRequest {
    return BulkUpdateRequestFromJSONTyped(json, false);
}

export function BulkUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): BulkUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'action': json['action'],
        'archive': json['archive'] == null ? undefined : json['archive'],
        'add_tags': json['add_tags'] == null ? undefined : json['add_tags'],
        'remove_tags': json['remove_tags'] == null ? undefined : json['remove_tags'],
        'links': json['links'] == null ? undefined : json['links'],
    };
}

export function BulkUpdateRequestToJSON(json: any): BulkUpdateRequest {
    return BulkUpdateRequestToJSONTyped(json, false);
}

export function BulkUpdateRequestToJSONTyped(value?: BulkUpdateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'action': value['action'],
        'archive': value['archive'],
        'add_tags': value['add_tags'],
        'remove_tags': value['remove_tags'],
        'links': value['links'],
    };
}

