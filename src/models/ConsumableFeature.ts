/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ConsumableFeatureAddOn } from './ConsumableFeatureAddOn';
import {
    ConsumableFeatureAddOnFromJSON,
    ConsumableFeatureAddOnFromJSONTyped,
    ConsumableFeatureAddOnToJSON,
    ConsumableFeatureAddOnToJSONTyped,
} from './ConsumableFeatureAddOn';

/**
 * 
 * @export
 * @interface ConsumableFeature
 */
export interface ConsumableFeature {
    /**
     * ISO_TIMESTAMP
     * @type {string}
     * @memberof ConsumableFeature
     */
    created?: string;
    /**
     * ISO_TIMESTAMP
     * @type {string}
     * @memberof ConsumableFeature
     */
    modified?: string;
    /**
     * 
     * @type {string}
     * @memberof ConsumableFeature
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ConsumableFeature
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof ConsumableFeature
     */
    limit?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ConsumableFeature
     */
    is_tier_default?: boolean;
    /**
     * 
     * @type {Array<ConsumableFeatureAddOn>}
     * @memberof ConsumableFeature
     */
    add_ons?: Array<ConsumableFeatureAddOn>;
}

/**
 * Check if a given object implements the ConsumableFeature interface.
 */
export function instanceOfConsumableFeature(value: object): value is ConsumableFeature {
    return true;
}

export function ConsumableFeatureFromJSON(json: any): ConsumableFeature {
    return ConsumableFeatureFromJSONTyped(json, false);
}

export function ConsumableFeatureFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConsumableFeature {
    if (json == null) {
        return json;
    }
    return {
        
        'created': json['created'] == null ? undefined : json['created'],
        'modified': json['modified'] == null ? undefined : json['modified'],
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'limit': json['limit'] == null ? undefined : json['limit'],
        'is_tier_default': json['is_tier_default'] == null ? undefined : json['is_tier_default'],
        'add_ons': json['add_ons'] == null ? undefined : ((json['add_ons'] as Array<any>).map(ConsumableFeatureAddOnFromJSON)),
    };
}

export function ConsumableFeatureToJSON(json: any): ConsumableFeature {
    return ConsumableFeatureToJSONTyped(json, false);
}

export function ConsumableFeatureToJSONTyped(value?: ConsumableFeature | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'created': value['created'],
        'modified': value['modified'],
        'id': value['id'],
        'name': value['name'],
        'limit': value['limit'],
        'is_tier_default': value['is_tier_default'],
        'add_ons': value['add_ons'] == null ? undefined : ((value['add_ons'] as Array<any>).map(ConsumableFeatureAddOnToJSON)),
    };
}

