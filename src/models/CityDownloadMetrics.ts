/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OtherDownloadMetric } from './OtherDownloadMetric';
import {
    OtherDownloadMetricFromJSON,
    OtherDownloadMetricFromJSONTyped,
    OtherDownloadMetricToJSON,
    OtherDownloadMetricToJSONTyped,
} from './OtherDownloadMetric';
import type { CityDownloadMetric } from './CityDownloadMetric';
import {
    CityDownloadMetricFromJSON,
    CityDownloadMetricFromJSONTyped,
    CityDownloadMetricToJSON,
    CityDownloadMetricToJSONTyped,
} from './CityDownloadMetric';

/**
 * 
 * @export
 * @interface CityDownloadMetrics
 */
export interface CityDownloadMetrics {
    /**
     * 
     * @type {Array<CityDownloadMetric>}
     * @memberof CityDownloadMetrics
     */
    metrics?: Array<CityDownloadMetric>;
    /**
     * 
     * @type {OtherDownloadMetric}
     * @memberof CityDownloadMetrics
     */
    other_metrics?: OtherDownloadMetric;
    /**
     * 
     * @type {number}
     * @memberof CityDownloadMetrics
     */
    size?: number;
    /**
     * 
     * @type {number}
     * @memberof CityDownloadMetrics
     */
    units?: number;
    /**
     * 
     * @type {string}
     * @memberof CityDownloadMetrics
     */
    unit?: CityDownloadMetricsUnitEnum;
    /**
     * 
     * @type {string}
     * @memberof CityDownloadMetrics
     */
    unit_reference?: string;
    /**
     * 
     * @type {string}
     * @memberof CityDownloadMetrics
     */
    facet?: CityDownloadMetricsFacetEnum;
}

/**
* @export
* @enum {string}
*/
export enum CityDownloadMetricsUnitEnum {
    minute = 'minute',
    hour = 'hour',
    day = 'day',
    week = 'week',
    month = 'month'
}
/**
* @export
* @enum {string}
*/
export enum CityDownloadMetricsFacetEnum {
    views = 'views',
    countries = 'countries',
    referrers = 'referrers',
    devices = 'devices'
}


/**
 * Check if a given object implements the CityDownloadMetrics interface.
 */
export function instanceOfCityDownloadMetrics(value: object): value is CityDownloadMetrics {
    return true;
}

export function CityDownloadMetricsFromJSON(json: any): CityDownloadMetrics {
    return CityDownloadMetricsFromJSONTyped(json, false);
}

export function CityDownloadMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CityDownloadMetrics {
    if (json == null) {
        return json;
    }
    return {
        
        'metrics': json['metrics'] == null ? undefined : ((json['metrics'] as Array<any>).map(CityDownloadMetricFromJSON)),
        'other_metrics': json['other_metrics'] == null ? undefined : OtherDownloadMetricFromJSON(json['other_metrics']),
        'size': json['size'] == null ? undefined : json['size'],
        'units': json['units'] == null ? undefined : json['units'],
        'unit': json['unit'] == null ? undefined : json['unit'],
        'unit_reference': json['unit_reference'] == null ? undefined : json['unit_reference'],
        'facet': json['facet'] == null ? undefined : json['facet'],
    };
}

export function CityDownloadMetricsToJSON(json: any): CityDownloadMetrics {
    return CityDownloadMetricsToJSONTyped(json, false);
}

export function CityDownloadMetricsToJSONTyped(value?: CityDownloadMetrics | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'metrics': value['metrics'] == null ? undefined : ((value['metrics'] as Array<any>).map(CityDownloadMetricToJSON)),
        'other_metrics': OtherDownloadMetricToJSON(value['other_metrics']),
        'size': value['size'],
        'units': value['units'],
        'unit': value['unit'],
        'unit_reference': value['unit_reference'],
        'facet': value['facet'],
    };
}

