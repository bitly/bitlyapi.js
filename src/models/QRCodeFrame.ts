/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QRCodeFrameType } from './QRCodeFrameType';
import {
    QRCodeFrameTypeFromJSON,
    QRCodeFrameTypeFromJSONTyped,
    QRCodeFrameTypeToJSON,
    QRCodeFrameTypeToJSONTyped,
} from './QRCodeFrameType';
import type { QRCodeFrameRequestColors } from './QRCodeFrameRequestColors';
import {
    QRCodeFrameRequestColorsFromJSON,
    QRCodeFrameRequestColorsFromJSONTyped,
    QRCodeFrameRequestColorsToJSON,
    QRCodeFrameRequestColorsToJSONTyped,
} from './QRCodeFrameRequestColors';
import type { QRCodeFrameRequestText } from './QRCodeFrameRequestText';
import {
    QRCodeFrameRequestTextFromJSON,
    QRCodeFrameRequestTextFromJSONTyped,
    QRCodeFrameRequestTextToJSON,
    QRCodeFrameRequestTextToJSONTyped,
} from './QRCodeFrameRequestText';

/**
 * 
 * @export
 * @interface QRCodeFrame
 */
export interface QRCodeFrame {
    /**
     * 
     * @type {QRCodeFrameType}
     * @memberof QRCodeFrame
     */
    id: QRCodeFrameType;
    /**
     * A readonly value denoting if the user should be able to customize the frame
     * @type {boolean}
     * @memberof QRCodeFrame
     */
    immutable?: boolean;
    /**
     * 
     * @type {QRCodeFrameRequestColors}
     * @memberof QRCodeFrame
     */
    colors?: QRCodeFrameRequestColors;
    /**
     * 
     * @type {QRCodeFrameRequestText}
     * @memberof QRCodeFrame
     */
    text?: QRCodeFrameRequestText;
    /**
     * The QR code's thumbnail image data as a data uri. Can be svg, png, jpg. Only used in response bodies.
     * @type {string}
     * @memberof QRCodeFrame
     */
    thumbnail?: string;
}



/**
 * Check if a given object implements the QRCodeFrame interface.
 */
export function instanceOfQRCodeFrame(value: object): value is QRCodeFrame {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function QRCodeFrameFromJSON(json: any): QRCodeFrame {
    return QRCodeFrameFromJSONTyped(json, false);
}

export function QRCodeFrameFromJSONTyped(json: any, ignoreDiscriminator: boolean): QRCodeFrame {
    if (json == null) {
        return json;
    }
    return {
        
        'id': QRCodeFrameTypeFromJSON(json['id']),
        'immutable': json['immutable'] == null ? undefined : json['immutable'],
        'colors': json['colors'] == null ? undefined : QRCodeFrameRequestColorsFromJSON(json['colors']),
        'text': json['text'] == null ? undefined : QRCodeFrameRequestTextFromJSON(json['text']),
        'thumbnail': json['thumbnail'] == null ? undefined : json['thumbnail'],
    };
}

export function QRCodeFrameToJSON(json: any): QRCodeFrame {
    return QRCodeFrameToJSONTyped(json, false);
}

export function QRCodeFrameToJSONTyped(value?: QRCodeFrame | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': QRCodeFrameTypeToJSON(value['id']),
        'immutable': value['immutable'],
        'colors': QRCodeFrameRequestColorsToJSON(value['colors']),
        'text': QRCodeFrameRequestTextToJSON(value['text']),
        'thumbnail': value['thumbnail'],
    };
}

