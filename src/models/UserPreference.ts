/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserPreference
 */
export interface UserPreference {
    /**
     * 
     * @type {string}
     * @memberof UserPreference
     */
    login: string;
    /**
     * 
     * @type {string}
     * @memberof UserPreference
     */
    preference: string;
    /**
     * 
     * @type {string}
     * @memberof UserPreference
     */
    value: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserPreference
     */
    is_active: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserPreference
     */
    modified: string;
}

/**
 * Check if a given object implements the UserPreference interface.
 */
export function instanceOfUserPreference(value: object): value is UserPreference {
    if (!('login' in value) || value['login'] === undefined) return false;
    if (!('preference' in value) || value['preference'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('is_active' in value) || value['is_active'] === undefined) return false;
    if (!('modified' in value) || value['modified'] === undefined) return false;
    return true;
}

export function UserPreferenceFromJSON(json: any): UserPreference {
    return UserPreferenceFromJSONTyped(json, false);
}

export function UserPreferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserPreference {
    if (json == null) {
        return json;
    }
    return {
        
        'login': json['login'],
        'preference': json['preference'],
        'value': json['value'],
        'is_active': json['is_active'],
        'modified': json['modified'],
    };
}

export function UserPreferenceToJSON(json: any): UserPreference {
    return UserPreferenceToJSONTyped(json, false);
}

export function UserPreferenceToJSONTyped(value?: UserPreference | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'login': value['login'],
        'preference': value['preference'],
        'value': value['value'],
        'is_active': value['is_active'],
        'modified': value['modified'],
    };
}

