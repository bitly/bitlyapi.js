/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DigitalBusinessCardContact
 */
export interface DigitalBusinessCardContact {
    /**
     * 
     * @type {string}
     * @memberof DigitalBusinessCardContact
     */
    contact_method: DigitalBusinessCardContactContactMethodEnum;
    /**
     * 
     * @type {string}
     * @memberof DigitalBusinessCardContact
     */
    method_type?: DigitalBusinessCardContactMethodTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof DigitalBusinessCardContact
     */
    value: string;
    /**
     * 
     * @type {number}
     * @memberof DigitalBusinessCardContact
     */
    sort_order: number;
    /**
     * 
     * @type {string}
     * @memberof DigitalBusinessCardContact
     */
    bitlink_id?: string;
}

/**
* @export
* @enum {string}
*/
export enum DigitalBusinessCardContactContactMethodEnum {
    email = 'email',
    phone = 'phone',
    location = 'location',
    note = 'note',
    website = 'website'
}
/**
* @export
* @enum {string}
*/
export enum DigitalBusinessCardContactMethodTypeEnum {
    no_label = 'no_label',
    email = 'email',
    work = 'work',
    personal = 'personal',
    home = 'home',
    other = 'other',
    mobile = 'mobile',
    direct = 'direct',
    main = 'main',
    fax = 'fax',
    office = 'office',
    address = 'address',
    company = 'company',
    homepage = 'homepage'
}


/**
 * Check if a given object implements the DigitalBusinessCardContact interface.
 */
export function instanceOfDigitalBusinessCardContact(value: object): value is DigitalBusinessCardContact {
    if (!('contact_method' in value) || value['contact_method'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('sort_order' in value) || value['sort_order'] === undefined) return false;
    return true;
}

export function DigitalBusinessCardContactFromJSON(json: any): DigitalBusinessCardContact {
    return DigitalBusinessCardContactFromJSONTyped(json, false);
}

export function DigitalBusinessCardContactFromJSONTyped(json: any, ignoreDiscriminator: boolean): DigitalBusinessCardContact {
    if (json == null) {
        return json;
    }
    return {
        
        'contact_method': json['contact_method'],
        'method_type': json['method_type'] == null ? undefined : json['method_type'],
        'value': json['value'],
        'sort_order': json['sort_order'],
        'bitlink_id': json['bitlink_id'] == null ? undefined : json['bitlink_id'],
    };
}

export function DigitalBusinessCardContactToJSON(json: any): DigitalBusinessCardContact {
    return DigitalBusinessCardContactToJSONTyped(json, false);
}

export function DigitalBusinessCardContactToJSONTyped(value?: DigitalBusinessCardContact | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'contact_method': value['contact_method'],
        'method_type': value['method_type'],
        'value': value['value'],
        'sort_order': value['sort_order'],
        'bitlink_id': value['bitlink_id'],
    };
}

