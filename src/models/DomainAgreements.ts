/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainAgreement } from './DomainAgreement';
import {
    DomainAgreementFromJSON,
    DomainAgreementFromJSONTyped,
    DomainAgreementToJSON,
    DomainAgreementToJSONTyped,
} from './DomainAgreement';

/**
 * 
 * @export
 * @interface DomainAgreements
 */
export interface DomainAgreements {
    /**
     * 
     * @type {Array<DomainAgreement>}
     * @memberof DomainAgreements
     */
    domain_agreements?: Array<DomainAgreement>;
}

/**
 * Check if a given object implements the DomainAgreements interface.
 */
export function instanceOfDomainAgreements(value: object): value is DomainAgreements {
    return true;
}

export function DomainAgreementsFromJSON(json: any): DomainAgreements {
    return DomainAgreementsFromJSONTyped(json, false);
}

export function DomainAgreementsFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainAgreements {
    if (json == null) {
        return json;
    }
    return {
        
        'domain_agreements': json['domain_agreements'] == null ? undefined : ((json['domain_agreements'] as Array<any>).map(DomainAgreementFromJSON)),
    };
}

export function DomainAgreementsToJSON(json: any): DomainAgreements {
    return DomainAgreementsToJSONTyped(json, false);
}

export function DomainAgreementsToJSONTyped(value?: DomainAgreements | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'domain_agreements': value['domain_agreements'] == null ? undefined : ((value['domain_agreements'] as Array<any>).map(DomainAgreementToJSON)),
    };
}

