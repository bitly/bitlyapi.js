/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * An object representing a Canva UserBrand record
 * @export
 * @interface PublicCanvaUserBrand
 */
export interface PublicCanvaUserBrand {
    /**
     * The Canva User's ID
     * @type {string}
     * @memberof PublicCanvaUserBrand
     */
    canva_user_id?: string;
    /**
     * The Canva User's Brand ID
     * @type {string}
     * @memberof PublicCanvaUserBrand
     */
    canva_brand_id?: string;
    /**
     * The Bitly login associated with the canva_user_id and canva_brand_id
     * @type {string}
     * @memberof PublicCanvaUserBrand
     */
    login?: string;
    /**
     * The records active status field
     * @type {boolean}
     * @memberof PublicCanvaUserBrand
     */
    active?: boolean;
    /**
     * The Bitly brand_guid preference for use in the Bitly Canva app
     * @type {string}
     * @memberof PublicCanvaUserBrand
     */
    brand_guid?: string;
    /**
     * The Bitly org_guid preference for use in the Bitly Canva app
     * @type {string}
     * @memberof PublicCanvaUserBrand
     */
    org_guid?: string;
}

/**
 * Check if a given object implements the PublicCanvaUserBrand interface.
 */
export function instanceOfPublicCanvaUserBrand(value: object): value is PublicCanvaUserBrand {
    return true;
}

export function PublicCanvaUserBrandFromJSON(json: any): PublicCanvaUserBrand {
    return PublicCanvaUserBrandFromJSONTyped(json, false);
}

export function PublicCanvaUserBrandFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicCanvaUserBrand {
    if (json == null) {
        return json;
    }
    return {
        
        'canva_user_id': json['canva_user_id'] == null ? undefined : json['canva_user_id'],
        'canva_brand_id': json['canva_brand_id'] == null ? undefined : json['canva_brand_id'],
        'login': json['login'] == null ? undefined : json['login'],
        'active': json['active'] == null ? undefined : json['active'],
        'brand_guid': json['brand_guid'] == null ? undefined : json['brand_guid'],
        'org_guid': json['org_guid'] == null ? undefined : json['org_guid'],
    };
}

export function PublicCanvaUserBrandToJSON(json: any): PublicCanvaUserBrand {
    return PublicCanvaUserBrandToJSONTyped(json, false);
}

export function PublicCanvaUserBrandToJSONTyped(value?: PublicCanvaUserBrand | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'canva_user_id': value['canva_user_id'],
        'canva_brand_id': value['canva_brand_id'],
        'login': value['login'],
        'active': value['active'],
        'brand_guid': value['brand_guid'],
        'org_guid': value['org_guid'],
    };
}

