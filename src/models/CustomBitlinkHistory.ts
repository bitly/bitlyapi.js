/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CustomBitlinkHistory
 */
export interface CustomBitlinkHistory {
    /**
     * 
     * @type {string}
     * @memberof CustomBitlinkHistory
     */
    group_guid?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomBitlinkHistory
     */
    keyword?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomBitlinkHistory
     */
    bsd?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomBitlinkHistory
     */
    hash?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomBitlinkHistory
     */
    login?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomBitlinkHistory
     */
    long_url?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomBitlinkHistory
     */
    created?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomBitlinkHistory
     */
    first_created?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomBitlinkHistory
     */
    deactivated?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CustomBitlinkHistory
     */
    is_active?: boolean;
}

/**
 * Check if a given object implements the CustomBitlinkHistory interface.
 */
export function instanceOfCustomBitlinkHistory(value: object): value is CustomBitlinkHistory {
    return true;
}

export function CustomBitlinkHistoryFromJSON(json: any): CustomBitlinkHistory {
    return CustomBitlinkHistoryFromJSONTyped(json, false);
}

export function CustomBitlinkHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomBitlinkHistory {
    if (json == null) {
        return json;
    }
    return {
        
        'group_guid': json['group_guid'] == null ? undefined : json['group_guid'],
        'keyword': json['keyword'] == null ? undefined : json['keyword'],
        'bsd': json['bsd'] == null ? undefined : json['bsd'],
        'hash': json['hash'] == null ? undefined : json['hash'],
        'login': json['login'] == null ? undefined : json['login'],
        'long_url': json['long_url'] == null ? undefined : json['long_url'],
        'created': json['created'] == null ? undefined : json['created'],
        'first_created': json['first_created'] == null ? undefined : json['first_created'],
        'deactivated': json['deactivated'] == null ? undefined : json['deactivated'],
        'is_active': json['is_active'] == null ? undefined : json['is_active'],
    };
}

export function CustomBitlinkHistoryToJSON(json: any): CustomBitlinkHistory {
    return CustomBitlinkHistoryToJSONTyped(json, false);
}

export function CustomBitlinkHistoryToJSONTyped(value?: CustomBitlinkHistory | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'group_guid': value['group_guid'],
        'keyword': value['keyword'],
        'bsd': value['bsd'],
        'hash': value['hash'],
        'login': value['login'],
        'long_url': value['long_url'],
        'created': value['created'],
        'first_created': value['first_created'],
        'deactivated': value['deactivated'],
        'is_active': value['is_active'],
    };
}

