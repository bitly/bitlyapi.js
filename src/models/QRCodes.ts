/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FullQRCodeWithScans } from './FullQRCodeWithScans';
import {
    FullQRCodeWithScansFromJSON,
    FullQRCodeWithScansFromJSONTyped,
    FullQRCodeWithScansToJSON,
    FullQRCodeWithScansToJSONTyped,
} from './FullQRCodeWithScans';

/**
 * 
 * @export
 * @interface QRCodes
 */
export interface QRCodes {
    /**
     * 
     * @type {Array<FullQRCodeWithScans>}
     * @memberof QRCodes
     */
    qr_codes?: Array<FullQRCodeWithScans>;
    /**
     * 
     * @type {number}
     * @memberof QRCodes
     */
    size?: number;
    /**
     * 
     * @type {number}
     * @memberof QRCodes
     */
    page?: number;
    /**
     * 
     * @type {number}
     * @memberof QRCodes
     */
    total?: number;
}

/**
 * Check if a given object implements the QRCodes interface.
 */
export function instanceOfQRCodes(value: object): value is QRCodes {
    return true;
}

export function QRCodesFromJSON(json: any): QRCodes {
    return QRCodesFromJSONTyped(json, false);
}

export function QRCodesFromJSONTyped(json: any, ignoreDiscriminator: boolean): QRCodes {
    if (json == null) {
        return json;
    }
    return {
        
        'qr_codes': json['qr_codes'] == null ? undefined : ((json['qr_codes'] as Array<any>).map(FullQRCodeWithScansFromJSON)),
        'size': json['size'] == null ? undefined : json['size'],
        'page': json['page'] == null ? undefined : json['page'],
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function QRCodesToJSON(json: any): QRCodes {
    return QRCodesToJSONTyped(json, false);
}

export function QRCodesToJSONTyped(value?: QRCodes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'qr_codes': value['qr_codes'] == null ? undefined : ((value['qr_codes'] as Array<any>).map(FullQRCodeWithScansToJSON)),
        'size': value['size'],
        'page': value['page'],
        'total': value['total'],
    };
}

