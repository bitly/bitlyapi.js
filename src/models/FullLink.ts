/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LinkDestination } from './LinkDestination';
import {
    LinkDestinationFromJSON,
    LinkDestinationFromJSONTyped,
    LinkDestinationToJSON,
    LinkDestinationToJSONTyped,
} from './LinkDestination';

/**
 * 
 * @export
 * @interface FullLink
 */
export interface FullLink {
    /**
     * 
     * @type {LinkDestination}
     * @memberof FullLink
     */
    destinations: LinkDestination;
    /**
     * 
     * @type {string}
     * @memberof FullLink
     */
    domain?: string;
    /**
     * The back half of the link. If not provided, this will default to a random hash.
     * @type {string}
     * @memberof FullLink
     */
    back_half?: string;
    /**
     * Always include a specific group and custom domain in your shorten calls.
     * @type {string}
     * @memberof FullLink
     */
    group_guid: string;
    /**
     * 
     * @type {string}
     * @memberof FullLink
     */
    title?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof FullLink
     */
    tags?: Array<string>;
}

/**
 * Check if a given object implements the FullLink interface.
 */
export function instanceOfFullLink(value: object): value is FullLink {
    if (!('destinations' in value) || value['destinations'] === undefined) return false;
    if (!('group_guid' in value) || value['group_guid'] === undefined) return false;
    return true;
}

export function FullLinkFromJSON(json: any): FullLink {
    return FullLinkFromJSONTyped(json, false);
}

export function FullLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): FullLink {
    if (json == null) {
        return json;
    }
    return {
        
        'destinations': LinkDestinationFromJSON(json['destinations']),
        'domain': json['domain'] == null ? undefined : json['domain'],
        'back_half': json['back_half'] == null ? undefined : json['back_half'],
        'group_guid': json['group_guid'],
        'title': json['title'] == null ? undefined : json['title'],
        'tags': json['tags'] == null ? undefined : json['tags'],
    };
}

export function FullLinkToJSON(json: any): FullLink {
    return FullLinkToJSONTyped(json, false);
}

export function FullLinkToJSONTyped(value?: FullLink | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'destinations': LinkDestinationToJSON(value['destinations']),
        'domain': value['domain'],
        'back_half': value['back_half'],
        'group_guid': value['group_guid'],
        'title': value['title'],
        'tags': value['tags'],
    };
}

