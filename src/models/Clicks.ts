/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LinkClicks } from './LinkClicks';
import {
    LinkClicksFromJSON,
    LinkClicksFromJSONTyped,
    LinkClicksToJSON,
    LinkClicksToJSONTyped,
} from './LinkClicks';

/**
 * 
 * @export
 * @interface Clicks
 */
export interface Clicks {
    /**
     * 
     * @type {Array<LinkClicks>}
     * @memberof Clicks
     */
    link_clicks?: Array<LinkClicks>;
    /**
     * 
     * @type {number}
     * @memberof Clicks
     */
    units?: number;
    /**
     * 
     * @type {string}
     * @memberof Clicks
     */
    unit?: ClicksUnitEnum;
    /**
     * 
     * @type {string}
     * @memberof Clicks
     */
    unit_reference?: string;
}

/**
* @export
* @enum {string}
*/
export enum ClicksUnitEnum {
    minute = 'minute',
    hour = 'hour',
    day = 'day',
    week = 'week',
    month = 'month'
}


/**
 * Check if a given object implements the Clicks interface.
 */
export function instanceOfClicks(value: object): value is Clicks {
    return true;
}

export function ClicksFromJSON(json: any): Clicks {
    return ClicksFromJSONTyped(json, false);
}

export function ClicksFromJSONTyped(json: any, ignoreDiscriminator: boolean): Clicks {
    if (json == null) {
        return json;
    }
    return {
        
        'link_clicks': json['link_clicks'] == null ? undefined : ((json['link_clicks'] as Array<any>).map(LinkClicksFromJSON)),
        'units': json['units'] == null ? undefined : json['units'],
        'unit': json['unit'] == null ? undefined : json['unit'],
        'unit_reference': json['unit_reference'] == null ? undefined : json['unit_reference'],
    };
}

export function ClicksToJSON(json: any): Clicks {
    return ClicksToJSONTyped(json, false);
}

export function ClicksToJSONTyped(value?: Clicks | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'link_clicks': value['link_clicks'] == null ? undefined : ((value['link_clicks'] as Array<any>).map(LinkClicksToJSON)),
        'units': value['units'],
        'unit': value['unit'],
        'unit_reference': value['unit_reference'],
    };
}

