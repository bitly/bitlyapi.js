/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MetricsColumn
 */
export interface MetricsColumn {
    /**
     * Unix of the start of the date time range for this column to be included in the report.
     * @type {number}
     * @memberof MetricsColumn
     */
    unix_from?: number;
    /**
     * Unix of the end of the date time range for this column to be included in the report.
     * @type {number}
     * @memberof MetricsColumn
     */
    unix_to?: number;
    /**
     * Metrics column header on the csv follow the format  "%s (01/01/2020 - 01/01/2022)." This field determines what goes on the first %s. For example, "Engagements Custom Date Range" will result in "Engagements Custom Date Range (01/01/2020 - 01/01/2022)".
     * @type {string}
     * @memberof MetricsColumn
     */
    csv_header_prefix?: string;
    /**
     * The minimum number of clicks a link must have in order to be included in the report. Default is 0. For example, minimum_count 100 means only links with at least a 100 clicks during this time period will be included in the report.
     * @type {number}
     * @memberof MetricsColumn
     */
    minimum_count?: number;
}

/**
 * Check if a given object implements the MetricsColumn interface.
 */
export function instanceOfMetricsColumn(value: object): value is MetricsColumn {
    return true;
}

export function MetricsColumnFromJSON(json: any): MetricsColumn {
    return MetricsColumnFromJSONTyped(json, false);
}

export function MetricsColumnFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetricsColumn {
    if (json == null) {
        return json;
    }
    return {
        
        'unix_from': json['unix_from'] == null ? undefined : json['unix_from'],
        'unix_to': json['unix_to'] == null ? undefined : json['unix_to'],
        'csv_header_prefix': json['csv_header_prefix'] == null ? undefined : json['csv_header_prefix'],
        'minimum_count': json['minimum_count'] == null ? undefined : json['minimum_count'],
    };
}

export function MetricsColumnToJSON(json: any): MetricsColumn {
    return MetricsColumnToJSONTyped(json, false);
}

export function MetricsColumnToJSONTyped(value?: MetricsColumn | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'unix_from': value['unix_from'],
        'unix_to': value['unix_to'],
        'csv_header_prefix': value['csv_header_prefix'],
        'minimum_count': value['minimum_count'],
    };
}

