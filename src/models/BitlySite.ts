/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BitlySiteAppearance } from './BitlySiteAppearance';
import {
    BitlySiteAppearanceFromJSON,
    BitlySiteAppearanceFromJSONTyped,
    BitlySiteAppearanceToJSON,
    BitlySiteAppearanceToJSONTyped,
} from './BitlySiteAppearance';
import type { SiteRedirects } from './SiteRedirects';
import {
    SiteRedirectsFromJSON,
    SiteRedirectsFromJSONTyped,
    SiteRedirectsToJSON,
    SiteRedirectsToJSONTyped,
} from './SiteRedirects';
import type { BitlySiteContent } from './BitlySiteContent';
import {
    BitlySiteContentFromJSON,
    BitlySiteContentFromJSONTyped,
    BitlySiteContentToJSON,
    BitlySiteContentToJSONTyped,
} from './BitlySiteContent';

/**
 * 
 * @export
 * @interface BitlySite
 */
export interface BitlySite {
    /**
     * 
     * @type {string}
     * @memberof BitlySite
     */
    site_guid?: string;
    /**
     * 
     * @type {string}
     * @memberof BitlySite
     */
    group_guid?: string;
    /**
     * 
     * @type {string}
     * @memberof BitlySite
     */
    status?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BitlySite
     */
    is_edited?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BitlySite
     */
    url?: string;
    /**
     * 
     * @type {BitlySiteContent}
     * @memberof BitlySite
     */
    content?: BitlySiteContent;
    /**
     * 
     * @type {BitlySiteAppearance}
     * @memberof BitlySite
     */
    appearance?: BitlySiteAppearance;
    /**
     * 
     * @type {number}
     * @memberof BitlySite
     */
    button_count?: number;
    /**
     * 
     * @type {string}
     * @memberof BitlySite
     */
    last_published?: string;
    /**
     * 
     * @type {string}
     * @memberof BitlySite
     */
    created?: string;
    /**
     * 
     * @type {string}
     * @memberof BitlySite
     */
    modified?: string;
    /**
     * 
     * @type {string}
     * @memberof BitlySite
     */
    qr_code_id?: string;
    /**
     * 
     * @type {Array<SiteRedirects>}
     * @memberof BitlySite
     */
    redirects?: Array<SiteRedirects>;
}

/**
 * Check if a given object implements the BitlySite interface.
 */
export function instanceOfBitlySite(value: object): value is BitlySite {
    return true;
}

export function BitlySiteFromJSON(json: any): BitlySite {
    return BitlySiteFromJSONTyped(json, false);
}

export function BitlySiteFromJSONTyped(json: any, ignoreDiscriminator: boolean): BitlySite {
    if (json == null) {
        return json;
    }
    return {
        
        'site_guid': json['site_guid'] == null ? undefined : json['site_guid'],
        'group_guid': json['group_guid'] == null ? undefined : json['group_guid'],
        'status': json['status'] == null ? undefined : json['status'],
        'is_edited': json['is_edited'] == null ? undefined : json['is_edited'],
        'url': json['url'] == null ? undefined : json['url'],
        'content': json['content'] == null ? undefined : BitlySiteContentFromJSON(json['content']),
        'appearance': json['appearance'] == null ? undefined : BitlySiteAppearanceFromJSON(json['appearance']),
        'button_count': json['button_count'] == null ? undefined : json['button_count'],
        'last_published': json['last_published'] == null ? undefined : json['last_published'],
        'created': json['created'] == null ? undefined : json['created'],
        'modified': json['modified'] == null ? undefined : json['modified'],
        'qr_code_id': json['qr_code_id'] == null ? undefined : json['qr_code_id'],
        'redirects': json['redirects'] == null ? undefined : ((json['redirects'] as Array<any>).map(SiteRedirectsFromJSON)),
    };
}

export function BitlySiteToJSON(json: any): BitlySite {
    return BitlySiteToJSONTyped(json, false);
}

export function BitlySiteToJSONTyped(value?: BitlySite | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'site_guid': value['site_guid'],
        'group_guid': value['group_guid'],
        'status': value['status'],
        'is_edited': value['is_edited'],
        'url': value['url'],
        'content': BitlySiteContentToJSON(value['content']),
        'appearance': BitlySiteAppearanceToJSON(value['appearance']),
        'button_count': value['button_count'],
        'last_published': value['last_published'],
        'created': value['created'],
        'modified': value['modified'],
        'qr_code_id': value['qr_code_id'],
        'redirects': value['redirects'] == null ? undefined : ((value['redirects'] as Array<any>).map(SiteRedirectsToJSON)),
    };
}

