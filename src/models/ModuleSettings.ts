/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ChartVisualization } from './ChartVisualization';
import {
    ChartVisualizationFromJSON,
    ChartVisualizationFromJSONTyped,
    ChartVisualizationToJSON,
    ChartVisualizationToJSONTyped,
} from './ChartVisualization';

/**
 * 
 * @export
 * @interface ModuleSettings
 */
export interface ModuleSettings {
    /**
     * 
     * @type {boolean}
     * @memberof ModuleSettings
     */
    allow_edits?: boolean;
    /**
     * 
     * @type {ChartVisualization}
     * @memberof ModuleSettings
     */
    visualization?: ChartVisualization;
    /**
     * 
     * @type {string}
     * @memberof ModuleSettings
     */
    chart_type?: ModuleSettingsChartTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ModuleSettings
     */
    view_metric_selection?: ModuleSettingsViewMetricSelectionEnum;
}

/**
* @export
* @enum {string}
*/
export enum ModuleSettingsChartTypeEnum {
    devices = 'devices',
    referrers = 'referrers',
    engagements = 'engagements',
    comparison = 'comparison',
    performance_over_time = 'performance_over_time',
    top_performing = 'top_performing',
    location = 'location',
    overview = 'overview'
}
/**
* @export
* @enum {string}
*/
export enum ModuleSettingsViewMetricSelectionEnum {
    page_views = 'page_views',
    page_button_clicks = 'page_button_clicks',
    button_clicks = 'button_clicks',
    qr_scans = 'qr_scans',
    button_clicks_and_qr_scans = 'button_clicks_and_qr_scans'
}


/**
 * Check if a given object implements the ModuleSettings interface.
 */
export function instanceOfModuleSettings(value: object): value is ModuleSettings {
    return true;
}

export function ModuleSettingsFromJSON(json: any): ModuleSettings {
    return ModuleSettingsFromJSONTyped(json, false);
}

export function ModuleSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModuleSettings {
    if (json == null) {
        return json;
    }
    return {
        
        'allow_edits': json['allow_edits'] == null ? undefined : json['allow_edits'],
        'visualization': json['visualization'] == null ? undefined : ChartVisualizationFromJSON(json['visualization']),
        'chart_type': json['chart_type'] == null ? undefined : json['chart_type'],
        'view_metric_selection': json['view_metric_selection'] == null ? undefined : json['view_metric_selection'],
    };
}

export function ModuleSettingsToJSON(json: any): ModuleSettings {
    return ModuleSettingsToJSONTyped(json, false);
}

export function ModuleSettingsToJSONTyped(value?: ModuleSettings | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'allow_edits': value['allow_edits'],
        'visualization': ChartVisualizationToJSON(value['visualization']),
        'chart_type': value['chart_type'],
        'view_metric_selection': value['view_metric_selection'],
    };
}

