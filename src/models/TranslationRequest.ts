/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TranslationRequest
 */
export interface TranslationRequest {
    /**
     * 
     * @type {string}
     * @memberof TranslationRequest
     */
    source_language: string;
    /**
     * 
     * @type {string}
     * @memberof TranslationRequest
     */
    target_language: string;
    /**
     * 
     * @type {string}
     * @memberof TranslationRequest
     */
    source_text: string;
}

/**
 * Check if a given object implements the TranslationRequest interface.
 */
export function instanceOfTranslationRequest(value: object): value is TranslationRequest {
    if (!('source_language' in value) || value['source_language'] === undefined) return false;
    if (!('target_language' in value) || value['target_language'] === undefined) return false;
    if (!('source_text' in value) || value['source_text'] === undefined) return false;
    return true;
}

export function TranslationRequestFromJSON(json: any): TranslationRequest {
    return TranslationRequestFromJSONTyped(json, false);
}

export function TranslationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranslationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'source_language': json['source_language'],
        'target_language': json['target_language'],
        'source_text': json['source_text'],
    };
}

export function TranslationRequestToJSON(json: any): TranslationRequest {
    return TranslationRequestToJSONTyped(json, false);
}

export function TranslationRequestToJSONTyped(value?: TranslationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'source_language': value['source_language'],
        'target_language': value['target_language'],
        'source_text': value['source_text'],
    };
}

