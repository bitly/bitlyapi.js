/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BulkUpload
 */
export interface BulkUpload {
    /**
     * 
     * @type {string}
     * @memberof BulkUpload
     */
    org_guid: string;
    /**
     * 
     * @type {string}
     * @memberof BulkUpload
     */
    group_guid: string;
    /**
     * 
     * @type {string}
     * @memberof BulkUpload
     */
    report_url: string;
    /**
     * 
     * @type {string}
     * @memberof BulkUpload
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof BulkUpload
     */
    uploaded_by: string;
    /**
     * 
     * @type {string}
     * @memberof BulkUpload
     */
    status: BulkUploadStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof BulkUpload
     */
    created: string;
    /**
     * 
     * @type {string}
     * @memberof BulkUpload
     */
    upload_type?: string;
}

/**
* @export
* @enum {string}
*/
export enum BulkUploadStatusEnum {
    in_progress = 'in_progress',
    success = 'success',
    partial_success = 'partial_success',
    failure = 'failure'
}


/**
 * Check if a given object implements the BulkUpload interface.
 */
export function instanceOfBulkUpload(value: object): value is BulkUpload {
    if (!('org_guid' in value) || value['org_guid'] === undefined) return false;
    if (!('group_guid' in value) || value['group_guid'] === undefined) return false;
    if (!('report_url' in value) || value['report_url'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('uploaded_by' in value) || value['uploaded_by'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    return true;
}

export function BulkUploadFromJSON(json: any): BulkUpload {
    return BulkUploadFromJSONTyped(json, false);
}

export function BulkUploadFromJSONTyped(json: any, ignoreDiscriminator: boolean): BulkUpload {
    if (json == null) {
        return json;
    }
    return {
        
        'org_guid': json['org_guid'],
        'group_guid': json['group_guid'],
        'report_url': json['report_url'],
        'name': json['name'],
        'uploaded_by': json['uploaded_by'],
        'status': json['status'],
        'created': json['created'],
        'upload_type': json['upload_type'] == null ? undefined : json['upload_type'],
    };
}

export function BulkUploadToJSON(json: any): BulkUpload {
    return BulkUploadToJSONTyped(json, false);
}

export function BulkUploadToJSONTyped(value?: BulkUpload | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'org_guid': value['org_guid'],
        'group_guid': value['group_guid'],
        'report_url': value['report_url'],
        'name': value['name'],
        'uploaded_by': value['uploaded_by'],
        'status': value['status'],
        'created': value['created'],
        'upload_type': value['upload_type'],
    };
}

