/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BitlinkBody } from './BitlinkBody';
import {
    BitlinkBodyFromJSON,
    BitlinkBodyFromJSONTyped,
    BitlinkBodyToJSON,
    BitlinkBodyToJSONTyped,
} from './BitlinkBody';
import type { ClickLink } from './ClickLink';
import {
    ClickLinkFromJSON,
    ClickLinkFromJSONTyped,
    ClickLinkToJSON,
    ClickLinkToJSONTyped,
} from './ClickLink';

/**
 * 
 * @export
 * @interface SortedLinks
 */
export interface SortedLinks {
    /**
     * 
     * @type {Array<BitlinkBody>}
     * @memberof SortedLinks
     */
    links?: Array<BitlinkBody>;
    /**
     * 
     * @type {Array<ClickLink>}
     * @memberof SortedLinks
     */
    sorted_links?: Array<ClickLink>;
}

/**
 * Check if a given object implements the SortedLinks interface.
 */
export function instanceOfSortedLinks(value: object): value is SortedLinks {
    return true;
}

export function SortedLinksFromJSON(json: any): SortedLinks {
    return SortedLinksFromJSONTyped(json, false);
}

export function SortedLinksFromJSONTyped(json: any, ignoreDiscriminator: boolean): SortedLinks {
    if (json == null) {
        return json;
    }
    return {
        
        'links': json['links'] == null ? undefined : ((json['links'] as Array<any>).map(BitlinkBodyFromJSON)),
        'sorted_links': json['sorted_links'] == null ? undefined : ((json['sorted_links'] as Array<any>).map(ClickLinkFromJSON)),
    };
}

export function SortedLinksToJSON(json: any): SortedLinks {
    return SortedLinksToJSONTyped(json, false);
}

export function SortedLinksToJSONTyped(value?: SortedLinks | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'links': value['links'] == null ? undefined : ((value['links'] as Array<any>).map(BitlinkBodyToJSON)),
        'sorted_links': value['sorted_links'] == null ? undefined : ((value['sorted_links'] as Array<any>).map(ClickLinkToJSON)),
    };
}

