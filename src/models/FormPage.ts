/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FormField } from './FormField';
import {
    FormFieldFromJSON,
    FormFieldFromJSONTyped,
    FormFieldToJSON,
    FormFieldToJSONTyped,
} from './FormField';

/**
 * 
 * @export
 * @interface FormPage
 */
export interface FormPage {
    /**
     * 
     * @type {Array<FormField>}
     * @memberof FormPage
     */
    fields?: Array<FormField>;
}

/**
 * Check if a given object implements the FormPage interface.
 */
export function instanceOfFormPage(value: object): value is FormPage {
    return true;
}

export function FormPageFromJSON(json: any): FormPage {
    return FormPageFromJSONTyped(json, false);
}

export function FormPageFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormPage {
    if (json == null) {
        return json;
    }
    return {
        
        'fields': json['fields'] == null ? undefined : ((json['fields'] as Array<any>).map(FormFieldFromJSON)),
    };
}

export function FormPageToJSON(json: any): FormPage {
    return FormPageToJSONTyped(json, false);
}

export function FormPageToJSONTyped(value?: FormPage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fields': value['fields'] == null ? undefined : ((value['fields'] as Array<any>).map(FormFieldToJSON)),
    };
}

