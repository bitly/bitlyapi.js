/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ChannelBitlink } from './ChannelBitlink';
import {
    ChannelBitlinkFromJSON,
    ChannelBitlinkFromJSONTyped,
    ChannelBitlinkToJSON,
    ChannelBitlinkToJSONTyped,
} from './ChannelBitlink';

/**
 * 
 * @export
 * @interface ChannelBitlinks
 */
export interface ChannelBitlinks {
    /**
     * 
     * @type {Array<ChannelBitlink>}
     * @memberof ChannelBitlinks
     */
    bitlinks?: Array<ChannelBitlink>;
    /**
     * 
     * @type {number}
     * @memberof ChannelBitlinks
     */
    total?: number;
}

/**
 * Check if a given object implements the ChannelBitlinks interface.
 */
export function instanceOfChannelBitlinks(value: object): value is ChannelBitlinks {
    return true;
}

export function ChannelBitlinksFromJSON(json: any): ChannelBitlinks {
    return ChannelBitlinksFromJSONTyped(json, false);
}

export function ChannelBitlinksFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelBitlinks {
    if (json == null) {
        return json;
    }
    return {
        
        'bitlinks': json['bitlinks'] == null ? undefined : ((json['bitlinks'] as Array<any>).map(ChannelBitlinkFromJSON)),
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function ChannelBitlinksToJSON(json: any): ChannelBitlinks {
    return ChannelBitlinksToJSONTyped(json, false);
}

export function ChannelBitlinksToJSONTyped(value?: ChannelBitlinks | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bitlinks': value['bitlinks'] == null ? undefined : ((value['bitlinks'] as Array<any>).map(ChannelBitlinkToJSON)),
        'total': value['total'],
    };
}

