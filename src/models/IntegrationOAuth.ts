/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IntegrationOAuth
 */
export interface IntegrationOAuth {
    /**
     * 
     * @type {string}
     * @memberof IntegrationOAuth
     */
    client_id?: string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationOAuth
     */
    org_guid?: string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationOAuth
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationOAuth
     */
    status?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof IntegrationOAuth
     */
    scopes?: Array<string>;
    /**
     * ISO timestamp
     * @type {string}
     * @memberof IntegrationOAuth
     */
    created?: string;
    /**
     * ISO timestamp
     * @type {string}
     * @memberof IntegrationOAuth
     */
    modified?: string;
}

/**
 * Check if a given object implements the IntegrationOAuth interface.
 */
export function instanceOfIntegrationOAuth(value: object): value is IntegrationOAuth {
    return true;
}

export function IntegrationOAuthFromJSON(json: any): IntegrationOAuth {
    return IntegrationOAuthFromJSONTyped(json, false);
}

export function IntegrationOAuthFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntegrationOAuth {
    if (json == null) {
        return json;
    }
    return {
        
        'client_id': json['client_id'] == null ? undefined : json['client_id'],
        'org_guid': json['org_guid'] == null ? undefined : json['org_guid'],
        'type': json['type'] == null ? undefined : json['type'],
        'status': json['status'] == null ? undefined : json['status'],
        'scopes': json['scopes'] == null ? undefined : json['scopes'],
        'created': json['created'] == null ? undefined : json['created'],
        'modified': json['modified'] == null ? undefined : json['modified'],
    };
}

export function IntegrationOAuthToJSON(json: any): IntegrationOAuth {
    return IntegrationOAuthToJSONTyped(json, false);
}

export function IntegrationOAuthToJSONTyped(value?: IntegrationOAuth | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'client_id': value['client_id'],
        'org_guid': value['org_guid'],
        'type': value['type'],
        'status': value['status'],
        'scopes': value['scopes'],
        'created': value['created'],
        'modified': value['modified'],
    };
}

