/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DigitalBusinessCardLayout } from './DigitalBusinessCardLayout';
import {
    DigitalBusinessCardLayoutFromJSON,
    DigitalBusinessCardLayoutFromJSONTyped,
    DigitalBusinessCardLayoutToJSON,
    DigitalBusinessCardLayoutToJSONTyped,
} from './DigitalBusinessCardLayout';
import type { DigitalBusinessCardContact } from './DigitalBusinessCardContact';
import {
    DigitalBusinessCardContactFromJSON,
    DigitalBusinessCardContactFromJSONTyped,
    DigitalBusinessCardContactToJSON,
    DigitalBusinessCardContactToJSONTyped,
} from './DigitalBusinessCardContact';

/**
 * 
 * @export
 * @interface BlockContentDigitalBusinessCard
 */
export interface BlockContentDigitalBusinessCard {
    /**
     * 
     * @type {string}
     * @memberof BlockContentDigitalBusinessCard
     */
    digital_business_card_id?: string;
    /**
     * 
     * @type {DigitalBusinessCardLayout}
     * @memberof BlockContentDigitalBusinessCard
     */
    layout?: DigitalBusinessCardLayout;
    /**
     * 
     * @type {string}
     * @memberof BlockContentDigitalBusinessCard
     */
    first_name?: string;
    /**
     * 
     * @type {string}
     * @memberof BlockContentDigitalBusinessCard
     */
    last_name?: string;
    /**
     * 
     * @type {string}
     * @memberof BlockContentDigitalBusinessCard
     */
    job_title?: string;
    /**
     * 
     * @type {string}
     * @memberof BlockContentDigitalBusinessCard
     */
    company?: string;
    /**
     * 
     * @type {string}
     * @memberof BlockContentDigitalBusinessCard
     */
    pronouns?: string;
    /**
     * 
     * @type {Array<DigitalBusinessCardContact>}
     * @memberof BlockContentDigitalBusinessCard
     */
    contacts?: Array<DigitalBusinessCardContact>;
    /**
     * 
     * @type {boolean}
     * @memberof BlockContentDigitalBusinessCard
     */
    download_enabled?: boolean;
}



/**
 * Check if a given object implements the BlockContentDigitalBusinessCard interface.
 */
export function instanceOfBlockContentDigitalBusinessCard(value: object): value is BlockContentDigitalBusinessCard {
    return true;
}

export function BlockContentDigitalBusinessCardFromJSON(json: any): BlockContentDigitalBusinessCard {
    return BlockContentDigitalBusinessCardFromJSONTyped(json, false);
}

export function BlockContentDigitalBusinessCardFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockContentDigitalBusinessCard {
    if (json == null) {
        return json;
    }
    return {
        
        'digital_business_card_id': json['digital_business_card_id'] == null ? undefined : json['digital_business_card_id'],
        'layout': json['layout'] == null ? undefined : DigitalBusinessCardLayoutFromJSON(json['layout']),
        'first_name': json['first_name'] == null ? undefined : json['first_name'],
        'last_name': json['last_name'] == null ? undefined : json['last_name'],
        'job_title': json['job_title'] == null ? undefined : json['job_title'],
        'company': json['company'] == null ? undefined : json['company'],
        'pronouns': json['pronouns'] == null ? undefined : json['pronouns'],
        'contacts': json['contacts'] == null ? undefined : ((json['contacts'] as Array<any>).map(DigitalBusinessCardContactFromJSON)),
        'download_enabled': json['download_enabled'] == null ? undefined : json['download_enabled'],
    };
}

export function BlockContentDigitalBusinessCardToJSON(json: any): BlockContentDigitalBusinessCard {
    return BlockContentDigitalBusinessCardToJSONTyped(json, false);
}

export function BlockContentDigitalBusinessCardToJSONTyped(value?: BlockContentDigitalBusinessCard | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'digital_business_card_id': value['digital_business_card_id'],
        'layout': DigitalBusinessCardLayoutToJSON(value['layout']),
        'first_name': value['first_name'],
        'last_name': value['last_name'],
        'job_title': value['job_title'],
        'company': value['company'],
        'pronouns': value['pronouns'],
        'contacts': value['contacts'] == null ? undefined : ((value['contacts'] as Array<any>).map(DigitalBusinessCardContactToJSON)),
        'download_enabled': value['download_enabled'],
    };
}

