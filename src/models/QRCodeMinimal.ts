/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QRCodeTypeEnum } from './QRCodeTypeEnum';
import {
    QRCodeTypeEnumFromJSON,
    QRCodeTypeEnumFromJSONTyped,
    QRCodeTypeEnumToJSON,
    QRCodeTypeEnumToJSONTyped,
} from './QRCodeTypeEnum';

/**
 * 
 * @export
 * @interface QRCodeMinimal
 */
export interface QRCodeMinimal {
    /**
     * 
     * @type {string}
     * @memberof QRCodeMinimal
     */
    qrcode_id?: string;
    /**
     * 
     * @type {string}
     * @memberof QRCodeMinimal
     */
    group_guid?: string;
    /**
     * 
     * @type {string}
     * @memberof QRCodeMinimal
     */
    title?: string;
    /**
     * Set to true if the QR code's customization values have been changed from their default setting
     * @type {boolean}
     * @memberof QRCodeMinimal
     */
    is_customized?: boolean;
    /**
     * A serialized string of the QR code's content
     * @type {string}
     * @memberof QRCodeMinimal
     */
    serialized_content?: string;
    /**
     * 
     * @type {QRCodeTypeEnum}
     * @memberof QRCodeMinimal
     */
    qr_code_type?: QRCodeTypeEnum;
    /**
     * A list of destination URLs that the qr code leads to.
     * @type {Array<string>}
     * @memberof QRCodeMinimal
     */
    long_urls?: Array<string>;
    /**
     * The bitlink ID associated with the qr code. Not all qr codes are associated with one.
     * @type {string}
     * @memberof QRCodeMinimal
     */
    bitlink_id?: string;
    /**
     * Set to true if QR code has GS1 values.
     * @type {boolean}
     * @memberof QRCodeMinimal
     */
    is_gs1?: boolean;
    /**
     * User that created the code.
     * @type {string}
     * @memberof QRCodeMinimal
     */
    created_by?: string;
    /**
     * 
     * @type {boolean}
     * @memberof QRCodeMinimal
     */
    archived?: boolean;
    /**
     * 
     * @type {string}
     * @memberof QRCodeMinimal
     */
    created?: string;
    /**
     * 
     * @type {string}
     * @memberof QRCodeMinimal
     */
    modified?: string;
}



/**
 * Check if a given object implements the QRCodeMinimal interface.
 */
export function instanceOfQRCodeMinimal(value: object): value is QRCodeMinimal {
    return true;
}

export function QRCodeMinimalFromJSON(json: any): QRCodeMinimal {
    return QRCodeMinimalFromJSONTyped(json, false);
}

export function QRCodeMinimalFromJSONTyped(json: any, ignoreDiscriminator: boolean): QRCodeMinimal {
    if (json == null) {
        return json;
    }
    return {
        
        'qrcode_id': json['qrcode_id'] == null ? undefined : json['qrcode_id'],
        'group_guid': json['group_guid'] == null ? undefined : json['group_guid'],
        'title': json['title'] == null ? undefined : json['title'],
        'is_customized': json['is_customized'] == null ? undefined : json['is_customized'],
        'serialized_content': json['serialized_content'] == null ? undefined : json['serialized_content'],
        'qr_code_type': json['qr_code_type'] == null ? undefined : QRCodeTypeEnumFromJSON(json['qr_code_type']),
        'long_urls': json['long_urls'] == null ? undefined : json['long_urls'],
        'bitlink_id': json['bitlink_id'] == null ? undefined : json['bitlink_id'],
        'is_gs1': json['is_gs1'] == null ? undefined : json['is_gs1'],
        'created_by': json['created_by'] == null ? undefined : json['created_by'],
        'archived': json['archived'] == null ? undefined : json['archived'],
        'created': json['created'] == null ? undefined : json['created'],
        'modified': json['modified'] == null ? undefined : json['modified'],
    };
}

export function QRCodeMinimalToJSON(json: any): QRCodeMinimal {
    return QRCodeMinimalToJSONTyped(json, false);
}

export function QRCodeMinimalToJSONTyped(value?: QRCodeMinimal | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'qrcode_id': value['qrcode_id'],
        'group_guid': value['group_guid'],
        'title': value['title'],
        'is_customized': value['is_customized'],
        'serialized_content': value['serialized_content'],
        'qr_code_type': QRCodeTypeEnumToJSON(value['qr_code_type']),
        'long_urls': value['long_urls'],
        'bitlink_id': value['bitlink_id'],
        'is_gs1': value['is_gs1'],
        'created_by': value['created_by'],
        'archived': value['archived'],
        'created': value['created'],
        'modified': value['modified'],
    };
}

