/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * An object denoting the position and size of the crop
 * @export
 * @interface QRCodeLogoCrop
 */
export interface QRCodeLogoCrop {
    /**
     * The x coordinate used to position the crop
     * @type {number}
     * @memberof QRCodeLogoCrop
     */
    x?: number;
    /**
     * The y coordinate used to position the crop
     * @type {number}
     * @memberof QRCodeLogoCrop
     */
    y?: number;
    /**
     * The width of the crop. Will instead be used as the radius for a circular crop.
     * @type {number}
     * @memberof QRCodeLogoCrop
     */
    w?: number;
    /**
     * The height of the crop. Will be completely disregarded for a circular crop.
     * @type {number}
     * @memberof QRCodeLogoCrop
     */
    h?: number;
}

/**
 * Check if a given object implements the QRCodeLogoCrop interface.
 */
export function instanceOfQRCodeLogoCrop(value: object): value is QRCodeLogoCrop {
    return true;
}

export function QRCodeLogoCropFromJSON(json: any): QRCodeLogoCrop {
    return QRCodeLogoCropFromJSONTyped(json, false);
}

export function QRCodeLogoCropFromJSONTyped(json: any, ignoreDiscriminator: boolean): QRCodeLogoCrop {
    if (json == null) {
        return json;
    }
    return {
        
        'x': json['x'] == null ? undefined : json['x'],
        'y': json['y'] == null ? undefined : json['y'],
        'w': json['w'] == null ? undefined : json['w'],
        'h': json['h'] == null ? undefined : json['h'],
    };
}

export function QRCodeLogoCropToJSON(json: any): QRCodeLogoCrop {
    return QRCodeLogoCropToJSONTyped(json, false);
}

export function QRCodeLogoCropToJSONTyped(value?: QRCodeLogoCrop | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'x': value['x'],
        'y': value['y'],
        'w': value['w'],
        'h': value['h'],
    };
}

