/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BitlinkBody } from './BitlinkBody';
import {
    BitlinkBodyFromJSON,
    BitlinkBodyFromJSONTyped,
    BitlinkBodyToJSON,
    BitlinkBodyToJSONTyped,
} from './BitlinkBody';
import type { CustomBitlinkHistory } from './CustomBitlinkHistory';
import {
    CustomBitlinkHistoryFromJSON,
    CustomBitlinkHistoryFromJSONTyped,
    CustomBitlinkHistoryToJSON,
    CustomBitlinkHistoryToJSONTyped,
} from './CustomBitlinkHistory';

/**
 * 
 * @export
 * @interface CustomBitlink
 */
export interface CustomBitlink {
    /**
     * 
     * @type {string}
     * @memberof CustomBitlink
     */
    custom_bitlink?: string;
    /**
     * 
     * @type {BitlinkBody}
     * @memberof CustomBitlink
     */
    bitlink?: BitlinkBody;
    /**
     * 
     * @type {Array<CustomBitlinkHistory>}
     * @memberof CustomBitlink
     */
    bitlink_history?: Array<CustomBitlinkHistory>;
}

/**
 * Check if a given object implements the CustomBitlink interface.
 */
export function instanceOfCustomBitlink(value: object): value is CustomBitlink {
    return true;
}

export function CustomBitlinkFromJSON(json: any): CustomBitlink {
    return CustomBitlinkFromJSONTyped(json, false);
}

export function CustomBitlinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomBitlink {
    if (json == null) {
        return json;
    }
    return {
        
        'custom_bitlink': json['custom_bitlink'] == null ? undefined : json['custom_bitlink'],
        'bitlink': json['bitlink'] == null ? undefined : BitlinkBodyFromJSON(json['bitlink']),
        'bitlink_history': json['bitlink_history'] == null ? undefined : ((json['bitlink_history'] as Array<any>).map(CustomBitlinkHistoryFromJSON)),
    };
}

export function CustomBitlinkToJSON(json: any): CustomBitlink {
    return CustomBitlinkToJSONTyped(json, false);
}

export function CustomBitlinkToJSONTyped(value?: CustomBitlink | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'custom_bitlink': value['custom_bitlink'],
        'bitlink': BitlinkBodyToJSON(value['bitlink']),
        'bitlink_history': value['bitlink_history'] == null ? undefined : ((value['bitlink_history'] as Array<any>).map(CustomBitlinkHistoryToJSON)),
    };
}

