/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The request body for updating an organization invitation request
 * @export
 * @interface PatchOrgInvitationRequest
 */
export interface PatchOrgInvitationRequest {
    /**
     * Status of the organization invitation request
     * @type {string}
     * @memberof PatchOrgInvitationRequest
     */
    status: PatchOrgInvitationRequestStatusEnum;
    /**
     * Email address of the user requesting to join the organization
     * @type {string}
     * @memberof PatchOrgInvitationRequest
     */
    email: string;
    /**
     * Bitly login of the user requesting to join the organization
     * @type {string}
     * @memberof PatchOrgInvitationRequest
     */
    login: string;
}

/**
* @export
* @enum {string}
*/
export enum PatchOrgInvitationRequestStatusEnum {
    denied = 'denied'
}


/**
 * Check if a given object implements the PatchOrgInvitationRequest interface.
 */
export function instanceOfPatchOrgInvitationRequest(value: object): value is PatchOrgInvitationRequest {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('login' in value) || value['login'] === undefined) return false;
    return true;
}

export function PatchOrgInvitationRequestFromJSON(json: any): PatchOrgInvitationRequest {
    return PatchOrgInvitationRequestFromJSONTyped(json, false);
}

export function PatchOrgInvitationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchOrgInvitationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'email': json['email'],
        'login': json['login'],
    };
}

export function PatchOrgInvitationRequestToJSON(json: any): PatchOrgInvitationRequest {
    return PatchOrgInvitationRequestToJSONTyped(json, false);
}

export function PatchOrgInvitationRequestToJSONTyped(value?: PatchOrgInvitationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'email': value['email'],
        'login': value['login'],
    };
}

