/* tslint:disable */
/* eslint-disable */
/**
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { InstallPreference } from './InstallPreference';
import {
    InstallPreferenceFromJSON,
    InstallPreferenceFromJSONTyped,
    InstallPreferenceToJSON,
    InstallPreferenceToJSONTyped,
} from './InstallPreference';

/**
 * 
 * @export
 * @interface Deeplink
 */
export interface Deeplink {
    /**
     * 
     * @type {string}
     * @memberof Deeplink
     */
    app_id?: string;
    /**
     * 
     * @type {string}
     * @memberof Deeplink
     */
    app_uri_path?: string;
    /**
     * 
     * @type {string}
     * @memberof Deeplink
     */
    install_url?: string;
    /**
     * 
     * @type {InstallPreference}
     * @memberof Deeplink
     */
    install_type?: InstallPreference;
}



/**
 * Check if a given object implements the Deeplink interface.
 */
export function instanceOfDeeplink(value: object): value is Deeplink {
    return true;
}

export function DeeplinkFromJSON(json: any): Deeplink {
    return DeeplinkFromJSONTyped(json, false);
}

export function DeeplinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): Deeplink {
    if (json == null) {
        return json;
    }
    return {
        
        'app_id': json['app_id'] == null ? undefined : json['app_id'],
        'app_uri_path': json['app_uri_path'] == null ? undefined : json['app_uri_path'],
        'install_url': json['install_url'] == null ? undefined : json['install_url'],
        'install_type': json['install_type'] == null ? undefined : InstallPreferenceFromJSON(json['install_type']),
    };
}

export function DeeplinkToJSON(json: any): Deeplink {
    return DeeplinkToJSONTyped(json, false);
}

export function DeeplinkToJSONTyped(value?: Deeplink | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'app_id': value['app_id'],
        'app_uri_path': value['app_uri_path'],
        'install_url': value['install_url'],
        'install_type': InstallPreferenceToJSON(value['install_type']),
    };
}

